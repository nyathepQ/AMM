{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\Empleados.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mensaje = styled.p`\n    color: ${props => props.tipo === 'error' ? 'darkred' : 'black'}\n    text-align: center;\n    border: 2px solid ${props => props.tipo === 'error' ? 'white' : 'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props => props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)'};\n`;\n_c = Mensaje;\nconst PagesDiv = styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;\n_c2 = PagesDiv;\nfunction Clientes() {\n  _s();\n  document.title = \"Empleados | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const inicialStateForm = {\n    id_usuario: 'NA',\n    id_tipoUsua: 'NA',\n    nombre_usuario: '',\n    contrasena_usuario: '',\n    id_tipoDocu: 'NA',\n    documento_usuario: '',\n    nombres: '',\n    apellidos: '',\n    telefono_usuario: '',\n    correo_usuario: '',\n    user_crea: '',\n    user_modifica: '',\n    modificado_el: ''\n  };\n  const [clientes, setClientes] = useState([]);\n  const [nuevoClient, setNuevoClient] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const resClient = await axios.get('http://localhost:3001/clientes');\n      setClientes(resClient.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const handleCliente = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user || user.id_tipoUsua === 3) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_cliente.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const clienteEnc = clientes.find(client => client.id_cliente === parseInt(idSeleccionado));\n        if (clienteEnc) {\n          setNuevoClient({\n            id_cliente: clienteEnc.id_tipoLimp,\n            nombre_cliente: clienteEnc.nombre_cliente,\n            apellido_cliente: clienteEnc.apellido_cliente,\n            direccion_cliente: clienteEnc.direccion_cliente,\n            telefono_cliente: clienteEnc.telefono_cliente,\n            correo_cliente: clienteEnc.correo_cliente,\n            observacion_cliente: clienteEnc.observacion_cliente\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de cliente invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoClient,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n        const response = await axios.post('http://localhost:3001/clientes/update', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar                    \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      } else {\n        //crear\n        const datosActualizados = {\n          ...nuevoClient,\n          user_crea: user.nombre_usuario\n        };\n        const response = await axios.post('http://localhost:3001/clientes/insert', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoClient(prev => ({\n            ...prev,\n            id_cliente: response.data.id\n          }));\n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de cliente invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/clientes/delete', {\n          id_cliente: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoClient(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PagesDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this), mensaje && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"mensaje\",\n          children: mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form_pages\",\n          onSubmit: handleCliente,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_display\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_cliente\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_cliente\",\n              id: \"id_cliente\",\n              value: nuevoClient.id_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                id_cliente: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Nuevo registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this), clientes.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: client.id_cliente,\n                children: client.id_cliente\n              }, client.id_cliente, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombre_cliente\",\n              children: \"Nombres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre_cliente\",\n              id: \"nombre_cliente\",\n              value: nuevoClient.nombre_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                nombre_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apellido_cliente\",\n              children: \"Apellidos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"apellido_cliente\",\n              id: \"apellido_cliente\",\n              value: nuevoClient.apellido_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                apellido_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"direccion_cliente\",\n              children: \"Direcci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"direccion_cliente\",\n              id: \"direccion_cliente\",\n              value: nuevoClient.direccion_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                direccion_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"telefono_cliente\",\n              children: \"Telefono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"telefono_cliente\",\n              id: \"telefono_cliente\",\n              value: nuevoClient.telefono_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                telefono_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"correo_cliente\",\n              children: \"Correo electronico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"correo_cliente\",\n              id: \"correo_cliente\",\n              value: nuevoClient.correo_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                correo_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"observacion_cliente\",\n              children: \"Observaciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"observaciones\",\n              name: \"observacion_cliente\",\n              id: \"observacion_cliente\",\n              value: nuevoClient.observacion_cliente,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                observacion_cliente: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalTable, {\n        onClose: () => setMostrarModal(false),\n        datos: clientes,\n        columnas: [{\n          label: 'Código',\n          field: 'id_cliente'\n        }, {\n          label: 'Nombres',\n          field: 'nombre_cliente'\n        }, {\n          label: 'Apellidos',\n          field: 'apellido_cliente'\n        }, {\n          label: 'Dirección',\n          field: 'direccion_cliente'\n        }, {\n          label: 'Telefono',\n          field: 'telefono_cliente'\n        }, {\n          label: 'Correo electronico',\n          field: 'correo_cliente'\n        }, {\n          label: 'Observaciones',\n          field: 'observacion_cliente'\n        }, {\n          label: 'Creador',\n          field: 'user_crea'\n        }, {\n          label: 'Fecha creación',\n          field: 'creado_el'\n        }, {\n          label: 'Modificador',\n          field: 'user_modifica'\n        }, {\n          label: 'Fecha modificación',\n          field: 'modificado_el'\n        }],\n        title: \"Clientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Clientes, \"FW/P2zqcUh4MrL6VUj6QTCxqKQ0=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c3 = Clientes;\n;\nexport default Clientes;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Mensaje\");\n$RefreshReg$(_c2, \"PagesDiv\");\n$RefreshReg$(_c3, \"Clientes\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Mensaje","p","props","tipo","_c","PagesDiv","div","_c2","Clientes","_s","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_usuario","id_tipoUsua","nombre_usuario","contrasena_usuario","id_tipoDocu","documento_usuario","nombres","apellidos","telefono_usuario","correo_usuario","user_crea","user_modifica","modificado_el","clientes","setClientes","nuevoClient","setNuevoClient","mostrarModal","setMostrarModal","cargarDatos","resClient","get","data","console","handleCliente","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","id_cliente","value","clienteEnc","find","client","parseInt","id_tipoLimp","nombre_cliente","apellido_cliente","direccion_cliente","telefono_cliente","correo_cliente","observacion_cliente","modFecha","datosActualizados","response","post","prev","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","map","type","onClose","datos","columnas","label","field","_c3","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/Empleados.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'darkred' : 'black')}\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Clientes() {\r\n    document.title = \"Empleados | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_usuario: 'NA', id_tipoUsua: 'NA', nombre_usuario: '', contrasena_usuario: '', id_tipoDocu: 'NA', documento_usuario: '', nombres: '', apellidos: '', telefono_usuario: '', correo_usuario: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [clientes, setClientes] = useState([]);\r\n    const [nuevoClient, setNuevoClient] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const resClient = await axios.get('http://localhost:3001/clientes');\r\n            setClientes(resClient.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleCliente = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user || user.id_tipoUsua === 3){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_cliente.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const clienteEnc = clientes.find(client => client.id_cliente === parseInt(idSeleccionado));\r\n\r\n                if(clienteEnc) {\r\n                    setNuevoClient({\r\n                        id_cliente: clienteEnc.id_tipoLimp,\r\n                        nombre_cliente: clienteEnc.nombre_cliente,\r\n                        apellido_cliente: clienteEnc.apellido_cliente,\r\n                        direccion_cliente: clienteEnc.direccion_cliente,\r\n                        telefono_cliente: clienteEnc.telefono_cliente,\r\n                        correo_cliente: clienteEnc.correo_cliente,\r\n                        observacion_cliente: clienteEnc.observacion_cliente\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de cliente invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/clientes/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/clientes/insert', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoClient(prev => ({ ...prev, id_cliente: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de cliente invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/clientes/delete', {\r\n                    id_cliente: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoClient(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleCliente}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_cliente\">Código</label>\r\n                        <select \r\n                            name=\"id_cliente\"\r\n                            id=\"id_cliente\"\r\n                            value={nuevoClient.id_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, id_cliente: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {clientes.map(client => (\r\n                                <option key={client.id_cliente} value={client.id_cliente}>\r\n                                    {client.id_cliente}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_cliente\">Nombres</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_cliente\"\r\n                            id=\"nombre_cliente\"\r\n                            value={nuevoClient.nombre_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, nombre_cliente: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"apellido_cliente\">Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"apellido_cliente\"\r\n                            id=\"apellido_cliente\"\r\n                            value={nuevoClient.apellido_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, apellido_cliente: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"direccion_cliente\">Dirección</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"direccion_cliente\"\r\n                            id=\"direccion_cliente\"\r\n                            value={nuevoClient.direccion_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, direccion_cliente: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"telefono_cliente\">Telefono</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"telefono_cliente\"\r\n                            id=\"telefono_cliente\"\r\n                            value={nuevoClient.telefono_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, telefono_cliente: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"correo_cliente\">Correo electronico</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"correo_cliente\"\r\n                            id=\"correo_cliente\"\r\n                            value={nuevoClient.correo_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, correo_cliente: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"observacion_cliente\">Observaciones</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"observaciones\"\r\n                            name=\"observacion_cliente\"\r\n                            id=\"observacion_cliente\"\r\n                            value={nuevoClient.observacion_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, observacion_cliente: e.target.value}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={clientes}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_cliente'}, \r\n                        {label: 'Nombres', field: 'nombre_cliente'},\r\n                        {label: 'Apellidos', field: 'apellido_cliente'},\r\n                        {label: 'Dirección', field: 'direccion_cliente'},\r\n                        {label: 'Telefono', field: 'telefono_cliente'},\r\n                        {label: 'Correo electronico', field: 'correo_cliente'},\r\n                        {label: 'Observaciones', field: 'observacion_cliente'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Clientes\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Clientes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}