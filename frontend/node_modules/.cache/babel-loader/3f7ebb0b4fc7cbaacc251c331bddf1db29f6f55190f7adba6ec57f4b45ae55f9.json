{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\Servicios.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual, calcSumaHoras } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mensaje = styled.p`\n    color: ${props => props.tipo === 'error' ? 'darkred' : 'black'}\n    text-align: center;\n    border: 2px solid ${props => props.tipo === 'error' ? 'white' : 'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props => props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)'};\n`;\n_c = Mensaje;\nconst PagesDiv = styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;\n_c2 = PagesDiv;\nfunction Servicios() {\n  _s();\n  document.title = \"Servicios | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const inicialStateForm = {\n    id_servicio: 'NA',\n    id_cliente: 'NA',\n    id_equipo: 'NA',\n    id_tipoLimp: 'NA',\n    fecha: '',\n    hora: '',\n    tiempo_estimado: '',\n    tiempo_finalizacion: '',\n    precio: '',\n    observacion: '',\n    user_crea: '',\n    user_modifica: '',\n    modificado_el: ''\n  };\n  const [servicios, setServicios] = useState([]);\n  const [clientes, setClientes] = useState([]);\n  const [equipos, setEquipos] = useState([]);\n  const [tiposLimpieza, setTiposLimpieza] = useState([]);\n  const [nuevoServicio, setNuevoServicio] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [datosModal, setDatosModal] = useState([]);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const [resServ, resClient, resEquip, resTLimp] = await Promise.all([axios.get('http://localhost:3001/servicios'), axios.get('http://localhost:3001/clientes'), axios.get('http://localhost:3001/equipos'), axios.get('http://localhost:3001/tipos/limpieza')]);\n      setServicios(resServ.data);\n      setClientes(resClient.data);\n      setEquipos(resEquip.data);\n      setTiposLimpieza(resTLimp.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const handleServicio = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user || user.id_tipoUsua === 3) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_servicio.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const servicioEnc = servicios.find(usua => usua.id_usuario === idSeleccionado);\n        if (servicioEnc) {\n          setNuevoServicio({\n            id_cliente: servicioEnc.id_cliente,\n            id_equipo: servicioEnc.id_equipo,\n            id_tipoLimp: servicioEnc.id_tipoLimp,\n            fecha: servicioEnc.fecha,\n            hora: servicioEnc.hora,\n            tiempo_estimado: servicioEnc.tiempo_estimado,\n            tiempo_finalizacion: servicioEnc.tiempo_finalizacion,\n            precio: servicioEnc.precio,\n            observacion: servicioEnc.observacion\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de servicio invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoServicio,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n        const response = await axios.post('http://localhost:3001/servicios/update', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar                    \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      } else {\n        //crear\n        const datosActualizados = {\n          ...nuevoServicio,\n          user_crea: user.nombre_usuario\n        };\n        const response = await axios.post('http://localhost:3001/servicios/insert', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoServicio(prev => ({\n            ...prev,\n            id_servicio: response.data.id\n          }));\n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      const datosCompletos = servicios.map(serv => {\n        const cliente = clientes.find(u => u.id_cliente === serv.id_cliente);\n        const equipo = equipos.find(u => u.id_equipo === serv.id_equipo);\n        const tipoLimp = tiposLimpieza.find(u => u.id_tipoLimp === serv.id_tipoLimp);\n        return {\n          ...serv,\n          nombre_cliente: cliente.nombre_cliente + ' ' + cliente.apellido_cliente,\n          nombre_equipo: equipo.nombre_equipo,\n          nombre_tipo_limpieza: tipoLimp.nombre_tipo\n        };\n      });\n      setDatosModal(datosCompletos);\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de servicio invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/servicios/delete', {\n          id_servicio: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoServicio(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PagesDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }, this), mensaje && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"mensaje\",\n          children: mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form_pages\",\n          onSubmit: handleServicio,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_display\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_servicio\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_servicio\",\n              id: \"id_servicio\",\n              value: nuevoServicio.id_servicio,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                id_servicio: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Nuevo registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }, this), servicios.map(serv => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: serv.id_servicio,\n                children: serv.id_servicio\n              }, serv.id_servicio, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_cliente\",\n              children: \"Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_cliente\",\n              id: \"id_cliente\",\n              value: nuevoServicio.id_cliente,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                id_cliente: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Seleccionar registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this), clientes.map(cl => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cl.id_cliente,\n                children: [cl.nombre_cliente, \" \", cl.apellido_cliente]\n              }, cl.id_cliente, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_equipo\",\n              children: \"Equipo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_equipo\",\n              id: \"id_equipo\",\n              value: nuevoServicio.id_equipo,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                id_equipo: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Seleccionar registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), equipos.map(eq => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: eq.id_equipo,\n                children: eq.nombre_equipo\n              }, eq.id_equipo, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_tipoLimp\",\n              children: \"Limpieza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_tipoLimp\",\n              id: \"id_tipoLimp\",\n              value: nuevoServicio.id_tipoLimp,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                id_tipoLimp: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Seleccionar registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), tiposLimpieza.map(tl => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tl.id_tipoLimp,\n                children: tl.nombre_tipo\n              }, tl.id_tipoLimp, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fecha\",\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              min: new Date().toISOString().split('T')[0] //evita el ingreso de fechas anteriores\n              ,\n              name: \"fecha\",\n              id: \"fecha\",\n              value: nuevoServicio.fecha,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                fecha: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"hora\",\n              children: \"Hora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"hora\",\n              id: \"hora\",\n              value: nuevoServicio.hora,\n              onChange: e => {\n                const nuevaHora = e.target.value;\n                const nuevaFinal = calcSumaHoras(nuevaHora, nuevoServicio.tiempo_estimado || '00:00');\n                setNuevoServicio(nuevoServicio => ({\n                  ...nuevoServicio,\n                  hora: nuevaHora,\n                  tiempo_finalizacion: nuevaFinal\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tiempo_estimado\",\n              children: \"Tiempo de servicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"tiempo_estimado\",\n              id: \"tiempo_estimado\",\n              value: nuevoServicio.tiempo_estimado,\n              onChange: e => {\n                const nuevoTiempo = e.target.value;\n                const nuevaFinal = calcSumaHoras(nuevoServicio.hora || '00:00', nuevoTiempo);\n                setNuevoServicio(nuevoServicio => ({\n                  ...nuevoServicio,\n                  tiempo_estimado: nuevoTiempo,\n                  tiempo_finalizacion: nuevaFinal\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tiempo_finalizacion\",\n              children: \"Hora de finalizaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"tiempo_finalizacion\",\n              id: \"tiempo_finalizacion\",\n              value: nuevoServicio.tiempo_finalizacion,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"precio\",\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\" // valor minimo aceptado\n              ,\n              step: \"0.01\" // acepta valores decimales\n              ,\n              name: \"precio\",\n              id: \"precio\",\n              value: nuevoServicio.precio,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                precio: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"observacion\",\n              children: \"Observaciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"observaciones\",\n              name: \"observacion\",\n              id: \"observacion\",\n              value: nuevoServicio.observacion,\n              onChange: e => setNuevoServicio(nuevoServicio => ({\n                ...nuevoServicio,\n                observacion: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalTable, {\n        onClose: () => setMostrarModal(false),\n        datos: datosModal,\n        columnas: [{\n          label: 'Código',\n          field: 'id_servicio'\n        }, {\n          label: 'Cliente',\n          field: 'nombre_cliente'\n        }, {\n          label: 'Equipo',\n          field: 'nombre_equipo'\n        }, {\n          label: 'Limpieza',\n          field: 'nombre_tipo_limpieza'\n        }, {\n          label: 'Fecha',\n          field: 'fecha'\n        }, {\n          label: 'Hora',\n          field: 'hora'\n        }, {\n          label: 'Tiempo de servicio',\n          field: 'tiempo_estimado'\n        }, {\n          label: 'Finalización',\n          field: 'tiempo_finalizacion'\n        }, {\n          label: 'Valor',\n          field: 'precio'\n        }, {\n          label: 'Observació',\n          field: 'observacion'\n        }, {\n          label: 'Creador',\n          field: 'user_crea'\n        }, {\n          label: 'Fecha creación',\n          field: 'creado_el'\n        }, {\n          label: 'Modificador',\n          field: 'user_modifica'\n        }, {\n          label: 'Fecha modificación',\n          field: 'modificado_el'\n        }],\n        title: \"Servicios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Servicios, \"dmCpmQEHDXKC0btePa2RY6hzLg8=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c3 = Servicios;\n;\nexport default Servicios;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Mensaje\");\n$RefreshReg$(_c2, \"PagesDiv\");\n$RefreshReg$(_c3, \"Servicios\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","calcSumaHoras","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Mensaje","p","props","tipo","_c","PagesDiv","div","_c2","Servicios","_s","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_servicio","id_cliente","id_equipo","id_tipoLimp","fecha","hora","tiempo_estimado","tiempo_finalizacion","precio","observacion","user_crea","user_modifica","modificado_el","servicios","setServicios","clientes","setClientes","equipos","setEquipos","tiposLimpieza","setTiposLimpieza","nuevoServicio","setNuevoServicio","mostrarModal","setMostrarModal","datosModal","setDatosModal","cargarDatos","resServ","resClient","resEquip","resTLimp","Promise","all","get","data","console","handleServicio","e","preventDefault","id_tipoUsua","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","value","servicioEnc","find","usua","id_usuario","modFecha","datosActualizados","nombre_usuario","response","post","prev","id","datosCompletos","map","serv","cliente","u","equipo","tipoLimp","nombre_cliente","apellido_cliente","nombre_equipo","nombre_tipo_limpieza","nombre_tipo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","cl","eq","tl","type","min","Date","toISOString","split","nuevaHora","nuevaFinal","nuevoTiempo","disabled","step","onClose","datos","columnas","label","field","_c3","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/Servicios.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual, calcSumaHoras } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'darkred' : 'black')}\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Servicios() {\r\n    document.title = \"Servicios | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_servicio: 'NA', id_cliente: 'NA', id_equipo: 'NA', id_tipoLimp: 'NA', fecha: '', hora: '', tiempo_estimado: '', tiempo_finalizacion: '', precio: '', observacion: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [servicios, setServicios] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [equipos, setEquipos] = useState([]);\r\n    const [tiposLimpieza, setTiposLimpieza] = useState([]);\r\n    const [nuevoServicio, setNuevoServicio] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n    const [datosModal, setDatosModal] = useState([]);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resServ, resClient, resEquip, resTLimp] = await Promise.all([\r\n                axios.get('http://localhost:3001/servicios'),\r\n                axios.get('http://localhost:3001/clientes'),\r\n                axios.get('http://localhost:3001/equipos'),\r\n                axios.get('http://localhost:3001/tipos/limpieza')\r\n            ]);\r\n            setServicios(resServ.data);\r\n            setClientes(resClient.data);\r\n            setEquipos(resEquip.data);\r\n            setTiposLimpieza(resTLimp.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleServicio = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user || user.id_tipoUsua === 3){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_servicio.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const servicioEnc = servicios.find(usua => usua.id_usuario === idSeleccionado);\r\n\r\n                if(servicioEnc) {\r\n                    setNuevoServicio({\r\n                        id_cliente: servicioEnc.id_cliente,\r\n                        id_equipo: servicioEnc.id_equipo,\r\n                        id_tipoLimp: servicioEnc.id_tipoLimp,\r\n                        fecha: servicioEnc.fecha,\r\n                        hora: servicioEnc.hora,\r\n                        tiempo_estimado: servicioEnc.tiempo_estimado,\r\n                        tiempo_finalizacion: servicioEnc.tiempo_finalizacion,\r\n                        precio: servicioEnc.precio,\r\n                        observacion: servicioEnc.observacion\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de servicio invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoServicio,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/servicios/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoServicio,\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/servicios/insert', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoServicio(prev => ({ ...prev, id_servicio: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            const datosCompletos = servicios.map(serv => {\r\n                const cliente = clientes.find(u => u.id_cliente === serv.id_cliente);\r\n                const equipo = equipos.find(u => u.id_equipo === serv.id_equipo);\r\n                const tipoLimp = tiposLimpieza.find(u => u.id_tipoLimp === serv.id_tipoLimp);\r\n                \r\n                return {\r\n                    ...serv,\r\n                    nombre_cliente: cliente.nombre_cliente + ' ' + cliente.apellido_cliente,\r\n                    nombre_equipo: equipo.nombre_equipo,\r\n                    nombre_tipo_limpieza: tipoLimp.nombre_tipo\r\n                }\r\n            });\r\n\r\n            setDatosModal(datosCompletos);\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de servicio invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/servicios/delete', {\r\n                    id_servicio: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoServicio(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleServicio}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_servicio\">Código</label>\r\n                        <select \r\n                            name=\"id_servicio\"\r\n                            id=\"id_servicio\"\r\n                            value={nuevoServicio.id_servicio}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_servicio: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {servicios.map(serv => (\r\n                                <option key={serv.id_servicio} value={serv.id_servicio}>\r\n                                    {serv.id_servicio}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_cliente\">Cliente</label>\r\n                        <select \r\n                            name=\"id_cliente\"\r\n                            id=\"id_cliente\"\r\n                            value={nuevoServicio.id_cliente}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_cliente: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {clientes.map(cl => (\r\n                                <option key={cl.id_cliente} value={cl.id_cliente}>\r\n                                    {cl.nombre_cliente} {cl.apellido_cliente}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_equipo\">Equipo</label>\r\n                        <select \r\n                            name=\"id_equipo\"\r\n                            id=\"id_equipo\"\r\n                            value={nuevoServicio.id_equipo}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_equipo: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {equipos.map(eq => (\r\n                                <option key={eq.id_equipo} value={eq.id_equipo}>\r\n                                    {eq.nombre_equipo}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_tipoLimp\">Limpieza</label>\r\n                        <select \r\n                            name=\"id_tipoLimp\"\r\n                            id=\"id_tipoLimp\"\r\n                            value={nuevoServicio.id_tipoLimp}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_tipoLimp: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {tiposLimpieza.map(tl => (\r\n                                <option key={tl.id_tipoLimp} value={tl.id_tipoLimp}>\r\n                                    {tl.nombre_tipo}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"fecha\">Fecha</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            min={new Date().toISOString().split('T')[0]} //evita el ingreso de fechas anteriores\r\n                            name=\"fecha\"\r\n                            id=\"fecha\"\r\n                            value={nuevoServicio.fecha}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, fecha: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"hora\">Hora</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"hora\"\r\n                            id=\"hora\"\r\n                            value={nuevoServicio.hora}\r\n                            onChange={(e) => {\r\n                                const nuevaHora = e.target.value;\r\n                                const nuevaFinal = calcSumaHoras(nuevaHora, nuevoServicio.tiempo_estimado || '00:00');\r\n                                setNuevoServicio(nuevoServicio => ({\r\n                                    ...nuevoServicio,\r\n                                    hora: nuevaHora,\r\n                                    tiempo_finalizacion: nuevaFinal\r\n                                }));\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"tiempo_estimado\">Tiempo de servicio</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"tiempo_estimado\"\r\n                            id=\"tiempo_estimado\"\r\n                            value={nuevoServicio.tiempo_estimado}\r\n                            onChange={(e) => {\r\n                                const nuevoTiempo = e.target.value;\r\n                                const nuevaFinal = calcSumaHoras(nuevoServicio.hora || '00:00', nuevoTiempo);\r\n                                setNuevoServicio(nuevoServicio => ({\r\n                                    ...nuevoServicio,\r\n                                    tiempo_estimado: nuevoTiempo,\r\n                                    tiempo_finalizacion: nuevaFinal\r\n                                }));\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"tiempo_finalizacion\">Hora de finalización</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"tiempo_finalizacion\"\r\n                            id=\"tiempo_finalizacion\"\r\n                            value={nuevoServicio.tiempo_finalizacion}\r\n                            disabled\r\n                        />\r\n                        <label htmlFor=\"precio\">Valor</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"0\" // valor minimo aceptado\r\n                            step=\"0.01\" // acepta valores decimales\r\n                            name=\"precio\"\r\n                            id=\"precio\"\r\n                            value={nuevoServicio.precio}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, precio: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"observacion\">Observaciones</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"observaciones\"\r\n                            name=\"observacion\"\r\n                            id=\"observacion\"\r\n                            value={nuevoServicio.observacion}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, observacion: e.target.value}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={datosModal}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_servicio'}, \r\n                        {label: 'Cliente', field: 'nombre_cliente'},\r\n                        {label: 'Equipo', field: 'nombre_equipo'},\r\n                        {label: 'Limpieza', field: 'nombre_tipo_limpieza'},\r\n                        {label: 'Fecha', field: 'fecha'},\r\n                        {label: 'Hora', field: 'hora'},\r\n                        {label: 'Tiempo de servicio', field: 'tiempo_estimado'},\r\n                        {label: 'Finalización', field: 'tiempo_finalizacion'},\r\n                        {label: 'Valor', field: 'precio'},\r\n                        {label: 'Observació', field: 'observacion'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Servicios\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Servicios;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}