{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\Empleados.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mensaje = styled.p`\n    color: ${props => props.tipo === 'error' ? 'darkred' : 'black'}\n    text-align: center;\n    border: 2px solid ${props => props.tipo === 'error' ? 'white' : 'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props => props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)'};\n`;\n_c = Mensaje;\nconst PagesDiv = styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;\n_c2 = PagesDiv;\nconst DivIdentificacion = styled.div`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: 25% 75%;\n`;\n_c3 = DivIdentificacion;\nfunction Clientes() {\n  _s();\n  document.title = \"Empleados | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const inicialStateForm = {\n    id_usuario: 'NA',\n    id_tipoUsua: 'NA',\n    nombre_usuario: '',\n    contrasena_usuario: '',\n    id_tipoDocu: 'NA',\n    documento_usuario: '',\n    nombres: '',\n    apellidos: '',\n    telefono_usuario: '',\n    correo_usuario: '',\n    user_crea: '',\n    user_modifica: '',\n    modificado_el: ''\n  };\n  const [usuarios, setUsuarios] = useState([]);\n  const [tiposUsuario, setTiposUsuario] = useState([]);\n  const [tiposDocumento, setTiposDocumento] = useState([]);\n  const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const [resUser, resTUs, resTDo] = await Promise.all([axios.get('http://localhost:3001/usuarios'), axios.get('http://localhost:3001/tipos/usuario'), axios.get('http://localhost:3001/tipos/documento')]);\n      setUsuarios(resUser.data);\n      setTiposUsuario(resTUs.data);\n      setTiposDocumento(resTDo.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const handleUsuario = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user || user.id_tipoUsua === 3) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_cliente.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const clienteEnc = clientes.find(client => client.id_cliente === parseInt(idSeleccionado));\n        if (clienteEnc) {\n          setNuevoClient({\n            id_cliente: clienteEnc.id_tipoLimp,\n            nombre_cliente: clienteEnc.nombre_cliente,\n            apellido_cliente: clienteEnc.apellido_cliente,\n            direccion_cliente: clienteEnc.direccion_cliente,\n            telefono_cliente: clienteEnc.telefono_cliente,\n            correo_cliente: clienteEnc.correo_cliente,\n            observacion_cliente: clienteEnc.observacion_cliente\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de cliente invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoClient,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n        const response = await axios.post('http://localhost:3001/clientes/update', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar                    \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      } else {\n        //crear\n        const datosActualizados = {\n          ...nuevoClient,\n          user_crea: user.nombre_usuario\n        };\n        const response = await axios.post('http://localhost:3001/clientes/insert', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoClient(prev => ({\n            ...prev,\n            id_cliente: response.data.id\n          }));\n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de cliente invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/clientes/delete', {\n          id_cliente: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoClient(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PagesDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }, this), mensaje && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"mensaje\",\n          children: mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form_pages\",\n          onSubmit: handleUsuario,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_display\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_usuario\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_usuario\",\n              id: \"id_usuario\",\n              value: nuevoUsuario.id_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                id_usuario: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Nuevo registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), usuarios.map(us => us.id_usuario !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: us.id_usuario,\n                children: us.id_usuario\n              }, us.id_usuario, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 59\n              }, this) : '')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombre_usuario\",\n              children: \"Nombre de usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre_usuario\",\n              id: \"nombre_usuario\",\n              value: nuevoClient.nombre_usuario,\n              onChange: e => setNuevoClient(nuevoClient => ({\n                ...nuevoClient,\n                nombre_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contrasena_usuario\",\n              children: \"Contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"contrasena_usuario\",\n              id: \"contrasena_usuario\",\n              value: nuevoUsuario.contrasena_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                contrasena_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_tipoDocu\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DivIdentificacion, {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"id_tipoDocu\",\n                id: \"id_tipoDocu\",\n                value: nuevoUsuario.id_tipoDocu,\n                onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                  ...nuevoUsuario,\n                  id_tipoDocu: e.target.value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NA\",\n                  children: \"Seleccionar registro\"\n                }, \"NA\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 33\n                }, this), tiposDocumento.map(tDoc => tDoc.id_tipoDocu !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tDoc.id_tipoDocu,\n                  children: tDoc.nombre_tipo\n                }, tDoc.id_tipoDocu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 66\n                }, this) : '')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalTable, {\n        onClose: () => setMostrarModal(false),\n        datos: usuarios,\n        columnas: [{\n          label: 'Código',\n          field: 'id_cliente'\n        }, {\n          label: 'Nombres',\n          field: 'nombre_cliente'\n        }, {\n          label: 'Apellidos',\n          field: 'apellido_cliente'\n        }, {\n          label: 'Dirección',\n          field: 'direccion_cliente'\n        }, {\n          label: 'Telefono',\n          field: 'telefono_cliente'\n        }, {\n          label: 'Correo electronico',\n          field: 'correo_cliente'\n        }, {\n          label: 'Observaciones',\n          field: 'observacion_cliente'\n        }, {\n          label: 'Creador',\n          field: 'user_crea'\n        }, {\n          label: 'Fecha creación',\n          field: 'creado_el'\n        }, {\n          label: 'Modificador',\n          field: 'user_modifica'\n        }, {\n          label: 'Fecha modificación',\n          field: 'modificado_el'\n        }],\n        title: \"Clientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Clientes, \"O9FL9BRpL4ldqzpIabE8PNt8yUw=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c4 = Clientes;\n;\nexport default Clientes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Mensaje\");\n$RefreshReg$(_c2, \"PagesDiv\");\n$RefreshReg$(_c3, \"DivIdentificacion\");\n$RefreshReg$(_c4, \"Clientes\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Mensaje","p","props","tipo","_c","PagesDiv","div","_c2","DivIdentificacion","_c3","Clientes","_s","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_usuario","id_tipoUsua","nombre_usuario","contrasena_usuario","id_tipoDocu","documento_usuario","nombres","apellidos","telefono_usuario","correo_usuario","user_crea","user_modifica","modificado_el","usuarios","setUsuarios","tiposUsuario","setTiposUsuario","tiposDocumento","setTiposDocumento","nuevoUsuario","setNuevoUsuario","mostrarModal","setMostrarModal","cargarDatos","resUser","resTUs","resTDo","Promise","all","get","data","console","handleUsuario","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","id_cliente","value","clienteEnc","clientes","find","client","parseInt","setNuevoClient","id_tipoLimp","nombre_cliente","apellido_cliente","direccion_cliente","telefono_cliente","correo_cliente","observacion_cliente","modFecha","datosActualizados","nuevoClient","response","post","prev","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","map","us","type","tDoc","nombre_tipo","onClose","datos","columnas","label","field","_c4","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/Empleados.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'darkred' : 'black')}\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst DivIdentificacion = styled.div`\r\n    display: grid;\r\n    gap: 5px;\r\n    grid-template-columns: 25% 75%;\r\n`;\r\n\r\nfunction Clientes() {\r\n    document.title = \"Empleados | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_usuario: 'NA', id_tipoUsua: 'NA', nombre_usuario: '', contrasena_usuario: '', id_tipoDocu: 'NA', documento_usuario: '', nombres: '', apellidos: '', telefono_usuario: '', correo_usuario: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [tiposUsuario, setTiposUsuario] = useState([]);\r\n    const [tiposDocumento, setTiposDocumento] = useState([]);\r\n    const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resUser, resTUs, resTDo] = await Promise.all([\r\n                axios.get('http://localhost:3001/usuarios'),\r\n                axios.get('http://localhost:3001/tipos/usuario'),\r\n                axios.get('http://localhost:3001/tipos/documento')\r\n            ]);\r\n            setUsuarios(resUser.data);\r\n            setTiposUsuario(resTUs.data);\r\n            setTiposDocumento(resTDo.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleUsuario = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user || user.id_tipoUsua === 3){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_cliente.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const clienteEnc = clientes.find(client => client.id_cliente === parseInt(idSeleccionado));\r\n\r\n                if(clienteEnc) {\r\n                    setNuevoClient({\r\n                        id_cliente: clienteEnc.id_tipoLimp,\r\n                        nombre_cliente: clienteEnc.nombre_cliente,\r\n                        apellido_cliente: clienteEnc.apellido_cliente,\r\n                        direccion_cliente: clienteEnc.direccion_cliente,\r\n                        telefono_cliente: clienteEnc.telefono_cliente,\r\n                        correo_cliente: clienteEnc.correo_cliente,\r\n                        observacion_cliente: clienteEnc.observacion_cliente\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de cliente invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/clientes/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/clientes/insert', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoClient(prev => ({ ...prev, id_cliente: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de cliente invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/clientes/delete', {\r\n                    id_cliente: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoClient(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleUsuario}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_usuario\">Código</label>\r\n                        <select \r\n                            name=\"id_usuario\"\r\n                            id=\"id_usuario\"\r\n                            value={nuevoUsuario.id_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, id_usuario: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {usuarios.map(us => (\r\n                                us.id_usuario !== 'NA' ? (<option key={us.id_usuario} value={us.id_usuario}>{us.id_usuario}</option>) : ''\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_usuario\">Nombre de usuario</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_usuario\"\r\n                            id=\"nombre_usuario\"\r\n                            value={nuevoClient.nombre_usuario}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, nombre_usuario: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"contrasena_usuario\">Contraseña</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"contrasena_usuario\"\r\n                            id=\"contrasena_usuario\"\r\n                            value={nuevoUsuario.contrasena_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, contrasena_usuario: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"id_tipoDocu\">Código</label>\r\n                        <DivIdentificacion>\r\n                            <select \r\n                                name=\"id_tipoDocu\"\r\n                                id=\"id_tipoDocu\"\r\n                                value={nuevoUsuario.id_tipoDocu}\r\n                                onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, id_tipoDocu: e.target.value}))}\r\n                            >\r\n                                <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                                {tiposDocumento.map(tDoc => (\r\n                                    tDoc.id_tipoDocu !== 'NA' ? (<option key={tDoc.id_tipoDocu} value={tDoc.id_tipoDocu}>{tDoc.nombre_tipo}</option>) : ''\r\n                                ))}\r\n                            </select>\r\n                        </DivIdentificacion>\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={usuarios}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_cliente'}, \r\n                        {label: 'Nombres', field: 'nombre_cliente'},\r\n                        {label: 'Apellidos', field: 'apellido_cliente'},\r\n                        {label: 'Dirección', field: 'direccion_cliente'},\r\n                        {label: 'Telefono', field: 'telefono_cliente'},\r\n                        {label: 'Correo electronico', field: 'correo_cliente'},\r\n                        {label: 'Observaciones', field: 'observacion_cliente'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Clientes\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Clientes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}