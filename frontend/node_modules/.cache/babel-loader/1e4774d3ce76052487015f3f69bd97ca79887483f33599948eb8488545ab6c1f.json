{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\Empleados.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mensaje = styled.p`\n    color: ${props => props.tipo === 'error' ? 'darkred' : 'black'}\n    text-align: center;\n    border: 2px solid ${props => props.tipo === 'error' ? 'white' : 'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props => props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)'};\n`;\n_c = Mensaje;\nconst PagesDiv = styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;\n_c2 = PagesDiv;\nconst DivIdentificacion = styled.div`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: 25% 75%;\n`;\n_c3 = DivIdentificacion;\nfunction Empleados() {\n  _s();\n  document.title = \"Empleados | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const inicialStateForm = {\n    id_usuario: 'NA',\n    id_tipoUsua: 'NA',\n    nombre_usuario: '',\n    contrasena_usuario: '',\n    id_tipoDocu: 'NA',\n    documento_usuario: '',\n    nombres: '',\n    apellidos: '',\n    telefono_usuario: '',\n    correo_usuario: '',\n    user_crea: '',\n    user_modifica: '',\n    modificado_el: ''\n  };\n  const [usuarios, setUsuarios] = useState([]);\n  const [tiposUsuario, setTiposUsuario] = useState([]);\n  const [tiposDocumento, setTiposDocumento] = useState([]);\n  const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [datosModal, setDatosModal] = useState([]);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const [resUser, resTUs, resTDo] = await Promise.all([axios.get('http://localhost:3001/usuarios'), axios.get('http://localhost:3001/tipos/usuario'), axios.get('http://localhost:3001/tipos/documento')]);\n      setUsuarios(resUser.data);\n      setTiposUsuario(resTUs.data);\n      setTiposDocumento(resTDo.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const handleUsuario = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user || user.id_tipoUsua === 3) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_usuario.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const usuarioEnc = usuarios.find(usua => usua.id_usuario === idSeleccionado);\n        if (usuarioEnc) {\n          setNuevoUsuario({\n            id_tipoUsua: usuarioEnc.id_tipoUsua,\n            nombre_usuario: usuarioEnc.nombre_usuario,\n            contrasena_usuario: usuarioEnc.contrasena_usuario,\n            id_tipoDocu: usuarioEnc.id_tipoDocu,\n            documento_usuario: usuarioEnc.documento_usuario,\n            nombres: usuarioEnc.nombres,\n            apellidos: usuarioEnc.apellidos,\n            telefono_usuario: usuarioEnc.telefono_usuario,\n            correo_usuario: usuarioEnc.correo_usuario\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de usuario invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoUsuario,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n        const response = await axios.post('http://localhost:3001/usuarios/update', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar                    \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      } else {\n        //crear\n        const createdId = () => {\n          const tipoUs = tiposUsuario.find(us => us.id_tipoUsua === form.id_tipoUsua);\n          const tpU = tipoUs.nombre_tipo.substring(0, 3).toUpperCase();\n          const nomb = form.nombres.substring(0, 2).toUpperCase();\n          const apell = form.apellidos.substring(0, 2).toUpperCase();\n          const aleatoriNumb = Math.floor(100000 + Math.random() * 900000);\n          return `${tpU}${nomb}${apell}${aleatoriNumb}`;\n        };\n        console.log(createdId());\n        const datosActualizados = {\n          ...nuevoUsuario,\n          id_usuario: createdId,\n          user_crea: user.nombre_usuario\n        };\n        const response = await axios.post('http://localhost:3001/usuarios/insert', datosActualizados);\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoUsuario(prev => ({\n            ...prev,\n            id_usuario: response.data.id\n          }));\n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      const datosCompletos = usuarios.filter(us => us.id_usuario !== 'NA').map(us => {\n        const tipoUsua = tiposUsuario.find(u => u.id_tipoUsua === us.id_tipoUsua);\n        const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === us.id_tipoDocu);\n        return {\n          ...us,\n          nombre_tipo_usuario: tipoUsua.nombre_tipo,\n          nombre_tipo_documento: tipoDocu.nombre_tipo\n        };\n      });\n      setDatosModal(datosCompletos);\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de usuario invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/usuarios/delete', {\n          id_usuario: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoUsuario(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PagesDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }, this), mensaje && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"mensaje\",\n          children: mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form_pages\",\n          onSubmit: handleUsuario,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_display\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_usuario\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_usuario\",\n              id: \"id_usuario\",\n              value: nuevoUsuario.id_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                id_usuario: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Nuevo registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this), usuarios.map(us => us.id_usuario !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: us.id_usuario,\n                children: us.id_usuario\n              }, us.id_usuario, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 59\n              }, this) : '')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_tipoUsua\",\n              children: \"Tipo de usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_tipoUsua\",\n              id: \"id_tipoUsua\",\n              value: nuevoUsuario.id_tipoUsua,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                id_tipoUsua: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Seleccionar registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this), tiposUsuario.map(tUsu => tUsu.id_tipoUsua !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tUsu.id_tipoUsua,\n                children: tUsu.nombre_tipo\n              }, tUsu.id_tipoUsua, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 62\n              }, this) : '')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombre_usuario\",\n              children: \"Nombre usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre_usuario\",\n              id: \"nombre_usuario\",\n              value: nuevoUsuario.nombre_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                nombre_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contrasena_usuario\",\n              children: \"Contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"contrasena_usuario\",\n              id: \"contrasena_usuario\",\n              value: nuevoUsuario.contrasena_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                contrasena_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_tipoDocu\",\n              children: \"Documento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DivIdentificacion, {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"id_tipoDocu\",\n                id: \"id_tipoDocu\",\n                value: nuevoUsuario.id_tipoDocu,\n                onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                  ...nuevoUsuario,\n                  id_tipoDocu: e.target.value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NA\",\n                  children: \"Seleccionar registro\"\n                }, \"NA\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 33\n                }, this), tiposDocumento.map(tDoc => tDoc.id_tipoDocu !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tDoc.id_tipoDocu,\n                  children: tDoc.nombre_tipo\n                }, tDoc.id_tipoDocu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 66\n                }, this) : '')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"documento_usuario\",\n                id: \"documento_usuario\",\n                value: nuevoUsuario.documento_usuario,\n                onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                  ...nuevoUsuario,\n                  documento_usuario: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombres\",\n              children: \"Nombres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombres\",\n              id: \"nombres\",\n              value: nuevoUsuario.nombres,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                nombres: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apellidos\",\n              children: \"Apellidos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"apellidos\",\n              id: \"apellidos\",\n              value: nuevoUsuario.apellidos,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                apellidos: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"telefono_usuario\",\n              children: \"Telefono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"telefono_usuario\",\n              id: \"telefono_usuario\",\n              value: nuevoUsuario.telefono_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                telefono_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"correo_usuario\",\n              children: \"Correo electronico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"correo_usuario\",\n              id: \"correo_usuario\",\n              value: nuevoUsuario.correo_usuario,\n              onChange: e => setNuevoUsuario(nuevoUsuario => ({\n                ...nuevoUsuario,\n                correo_usuario: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalTable, {\n        onClose: () => setMostrarModal(false),\n        datos: datosModal,\n        columnas: [{\n          label: 'Código',\n          field: 'id_usuario'\n        }, {\n          label: 'Tipo de usuario',\n          field: 'nombre_tipo_usuario'\n        }, {\n          label: 'Nombre usuario',\n          field: 'nombre_usuario'\n        }, {\n          label: 'Contraseña',\n          field: 'contrasena_usuario'\n        }, {\n          label: 'Tipo de documento',\n          field: 'nombre_tipo_documento'\n        }, {\n          label: 'Documento',\n          field: 'documento_usuario'\n        }, {\n          label: 'Nombres',\n          field: 'nombres'\n        }, {\n          label: 'Apellidos',\n          field: 'apellidos'\n        }, {\n          label: 'Telefono',\n          field: 'telefono_usuario'\n        }, {\n          label: 'Correo',\n          field: 'correo_usuario'\n        }, {\n          label: 'Creador',\n          field: 'user_crea'\n        }, {\n          label: 'Fecha creación',\n          field: 'creado_el'\n        }, {\n          label: 'Modificador',\n          field: 'user_modifica'\n        }, {\n          label: 'Fecha modificación',\n          field: 'modificado_el'\n        }],\n        title: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Empleados, \"RTFpeNj8ljMqDmOdsZoye5Zyli4=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c4 = Empleados;\n;\nexport default Empleados;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Mensaje\");\n$RefreshReg$(_c2, \"PagesDiv\");\n$RefreshReg$(_c3, \"DivIdentificacion\");\n$RefreshReg$(_c4, \"Empleados\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Mensaje","p","props","tipo","_c","PagesDiv","div","_c2","DivIdentificacion","_c3","Empleados","_s","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_usuario","id_tipoUsua","nombre_usuario","contrasena_usuario","id_tipoDocu","documento_usuario","nombres","apellidos","telefono_usuario","correo_usuario","user_crea","user_modifica","modificado_el","usuarios","setUsuarios","tiposUsuario","setTiposUsuario","tiposDocumento","setTiposDocumento","nuevoUsuario","setNuevoUsuario","mostrarModal","setMostrarModal","datosModal","setDatosModal","cargarDatos","resUser","resTUs","resTDo","Promise","all","get","data","console","handleUsuario","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","value","usuarioEnc","find","usua","modFecha","datosActualizados","response","post","createdId","tipoUs","us","tpU","nombre_tipo","substring","toUpperCase","nomb","apell","aleatoriNumb","Math","floor","random","log","prev","id","datosCompletos","filter","map","tipoUsua","u","tipoDocu","nombre_tipo_usuario","nombre_tipo_documento","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","tUsu","type","tDoc","onClose","datos","columnas","label","field","_c4","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/Empleados.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'darkred' : 'black')}\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo == 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst DivIdentificacion = styled.div`\r\n    display: grid;\r\n    gap: 5px;\r\n    grid-template-columns: 25% 75%;\r\n`;\r\n\r\nfunction Empleados() {\r\n    document.title = \"Empleados | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_usuario: 'NA', id_tipoUsua: 'NA', nombre_usuario: '', contrasena_usuario: '', id_tipoDocu: 'NA', documento_usuario: '', nombres: '', apellidos: '', telefono_usuario: '', correo_usuario: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [tiposUsuario, setTiposUsuario] = useState([]);\r\n    const [tiposDocumento, setTiposDocumento] = useState([]);\r\n    const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n    const [datosModal, setDatosModal] = useState([]);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resUser, resTUs, resTDo] = await Promise.all([\r\n                axios.get('http://localhost:3001/usuarios'),\r\n                axios.get('http://localhost:3001/tipos/usuario'),\r\n                axios.get('http://localhost:3001/tipos/documento')\r\n            ]);\r\n            setUsuarios(resUser.data);\r\n            setTiposUsuario(resTUs.data);\r\n            setTiposDocumento(resTDo.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleUsuario = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user || user.id_tipoUsua === 3){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_usuario.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const usuarioEnc = usuarios.find(usua => usua.id_usuario === idSeleccionado);\r\n\r\n                if(usuarioEnc) {\r\n                    setNuevoUsuario({\r\n                        id_tipoUsua: usuarioEnc.id_tipoUsua,\r\n                        nombre_usuario: usuarioEnc.nombre_usuario,\r\n                        contrasena_usuario: usuarioEnc.contrasena_usuario,\r\n                        id_tipoDocu: usuarioEnc.id_tipoDocu,\r\n                        documento_usuario: usuarioEnc.documento_usuario,\r\n                        nombres: usuarioEnc.nombres,\r\n                        apellidos: usuarioEnc.apellidos,\r\n                        telefono_usuario: usuarioEnc.telefono_usuario,\r\n                        correo_usuario: usuarioEnc.correo_usuario\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de usuario invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoUsuario,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/usuarios/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                const createdId = () => {\r\n                    const tipoUs = tiposUsuario.find(us => us.id_tipoUsua === form.id_tipoUsua);\r\n                    const tpU = tipoUs.nombre_tipo.substring(0, 3).toUpperCase();\r\n                    const nomb = form.nombres.substring(0, 2).toUpperCase();\r\n                    const apell = form.apellidos.substring(0, 2).toUpperCase();\r\n                    const aleatoriNumb = Math.floor(100000 + Math.random() * 900000);\r\n\r\n                    return `${tpU}${nomb}${apell}${aleatoriNumb}`;\r\n                }\r\n\r\n                console.log(createdId());\r\n\r\n                const datosActualizados = {\r\n                    ...nuevoUsuario,\r\n                    id_usuario: createdId,\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/usuarios/insert', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoUsuario(prev => ({ ...prev, id_usuario: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            const datosCompletos = usuarios.filter(us => us.id_usuario !== 'NA').map(us => {\r\n                const tipoUsua = tiposUsuario.find(u => u.id_tipoUsua === us.id_tipoUsua);\r\n                const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === us.id_tipoDocu);\r\n                \r\n                return {\r\n                    ...us,\r\n                    nombre_tipo_usuario: tipoUsua.nombre_tipo,\r\n                    nombre_tipo_documento: tipoDocu.nombre_tipo\r\n                }\r\n            });\r\n\r\n            setDatosModal(datosCompletos);\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de usuario invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/usuarios/delete', {\r\n                    id_usuario: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoUsuario(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleUsuario}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_usuario\">Código</label>\r\n                        <select \r\n                            name=\"id_usuario\"\r\n                            id=\"id_usuario\"\r\n                            value={nuevoUsuario.id_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, id_usuario: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {usuarios.map(us => (\r\n                                us.id_usuario !== 'NA' ? (<option key={us.id_usuario} value={us.id_usuario}>{us.id_usuario}</option>) : ''\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_tipoUsua\">Tipo de usuario</label>\r\n                        <select \r\n                            name=\"id_tipoUsua\"\r\n                            id=\"id_tipoUsua\"\r\n                            value={nuevoUsuario.id_tipoUsua}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, id_tipoUsua: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {tiposUsuario.map(tUsu => (\r\n                                tUsu.id_tipoUsua !== 'NA' ? (<option key={tUsu.id_tipoUsua} value={tUsu.id_tipoUsua}>{tUsu.nombre_tipo}</option>) : ''\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_usuario\">Nombre usuario</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_usuario\"\r\n                            id=\"nombre_usuario\"\r\n                            value={nuevoUsuario.nombre_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, nombre_usuario: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"contrasena_usuario\">Contraseña</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"contrasena_usuario\"\r\n                            id=\"contrasena_usuario\"\r\n                            value={nuevoUsuario.contrasena_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, contrasena_usuario: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"id_tipoDocu\">Documento</label>\r\n                        <DivIdentificacion>\r\n                            <select \r\n                                name=\"id_tipoDocu\"\r\n                                id=\"id_tipoDocu\"\r\n                                value={nuevoUsuario.id_tipoDocu}\r\n                                onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, id_tipoDocu: e.target.value}))}\r\n                            >\r\n                                <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                                {tiposDocumento.map(tDoc => (\r\n                                    tDoc.id_tipoDocu !== 'NA' ? (<option key={tDoc.id_tipoDocu} value={tDoc.id_tipoDocu}>{tDoc.nombre_tipo}</option>) : ''\r\n                                ))}\r\n                            </select>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"documento_usuario\"\r\n                                id=\"documento_usuario\"\r\n                                value={nuevoUsuario.documento_usuario}\r\n                                onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, documento_usuario: e.target.value}))}\r\n                            />\r\n                        </DivIdentificacion>\r\n                        <label htmlFor=\"nombres\">Nombres</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombres\"\r\n                            id=\"nombres\"\r\n                            value={nuevoUsuario.nombres}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, nombres: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"apellidos\">Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"apellidos\"\r\n                            id=\"apellidos\"\r\n                            value={nuevoUsuario.apellidos}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, apellidos: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"telefono_usuario\">Telefono</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"telefono_usuario\"\r\n                            id=\"telefono_usuario\"\r\n                            value={nuevoUsuario.telefono_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, telefono_usuario: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"correo_usuario\">Correo electronico</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"correo_usuario\"\r\n                            id=\"correo_usuario\"\r\n                            value={nuevoUsuario.correo_usuario}\r\n                            onChange={(e) => setNuevoUsuario(nuevoUsuario => ({ ...nuevoUsuario, correo_usuario: e.target.value}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={datosModal}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_usuario'}, \r\n                        {label: 'Tipo de usuario', field: 'nombre_tipo_usuario'},\r\n                        {label: 'Nombre usuario', field: 'nombre_usuario'},\r\n                        {label: 'Contraseña', field: 'contrasena_usuario'},\r\n                        {label: 'Tipo de documento', field: 'nombre_tipo_documento'},\r\n                        {label: 'Documento', field: 'documento_usuario'},\r\n                        {label: 'Nombres', field: 'nombres'},\r\n                        {label: 'Apellidos', field: 'apellidos'},\r\n                        {label: 'Telefono', field: 'telefono_usuario'},\r\n                        {label: 'Correo', field: 'correo_usuario'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Usuarios\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Empleados;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}