{"ast":null,"code":"export function getFechaHoraActual() {\n  const ahora = new Date();\n  const año = ahora.getFullYear();\n  const mes = String(ahora.getMonth() + 1).padStart(2, '0');\n  const dia = String(ahora.getDate()).padStart(2, '0');\n  const horas = String(ahora.getHours()).padStart(2, '0');\n  const minutos = String(ahora.getMinutes()).padStart(2, '0');\n  const segundos = String(ahora.getSeconds()).padStart(2, '0');\n  return `${año}-${mes}-${dia} ${horas}:${minutos}:${segundos}`;\n}\nexport function formatearFecha(date) {\n  const fecha = new Date(date);\n  const año = fecha.getFullYear();\n  const mes = String(fecha.getMonth() + 1).padStart(2, '0');\n  const dia = String(fecha.getDate()).padStart(2, '0');\n  return `${año}-${mes}-${dia}`;\n}\nexport function fechaTitle(date) {\n  const fechaActual = formatearFecha(date);\n  const [year, month, day] = fechaActual.split('-'); //separar fechas\n\n  const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n  //ajustar el indice del mes\n  const nombreMes = meses[parseInt(month, 10) - 1];\n  return `${day} de ${nombreMes} del ${year}`;\n}\nexport function calcSumaHoras(horaInicial, tiempoEstimado) {\n  const [h1, m1] = horaInicial.split(':').map(Number);\n  const [h2, m2] = tiempoEstimado.split(':').map(Number);\n  let minutosTotales = m1 + m2;\n  let horasTotales = h1 + h2 + Math.floor(minutosTotales / 60);\n  minutosTotales = minutosTotales % 60;\n\n  //formato\n  const hh = String(horasTotales).padStart(2, '0');\n  const mm = String(minutosTotales).padStart(2, '0');\n  return `${hh}:${mm}`;\n}","map":{"version":3,"names":["getFechaHoraActual","ahora","Date","año","getFullYear","mes","String","getMonth","padStart","dia","getDate","horas","getHours","minutos","getMinutes","segundos","getSeconds","formatearFecha","date","fecha","fechaTitle","fechaActual","year","month","day","split","meses","nombreMes","parseInt","calcSumaHoras","horaInicial","tiempoEstimado","h1","m1","map","Number","h2","m2","minutosTotales","horasTotales","Math","floor","hh","mm"],"sources":["C:/Users/nyath/Documents/Git proyects/GA8-220501096-AA1-EV01/amm/frontend/src/utils/time.js"],"sourcesContent":["export function getFechaHoraActual() {\r\n    const ahora = new Date();\r\n\r\n    const año = ahora.getFullYear();\r\n    const mes = String(ahora.getMonth() + 1).padStart(2, '0');\r\n    const dia = String(ahora.getDate()).padStart(2, '0');\r\n\r\n    const horas = String(ahora.getHours()).padStart(2, '0');\r\n    const minutos = String(ahora.getMinutes()).padStart(2, '0');\r\n    const segundos = String(ahora.getSeconds()).padStart(2, '0');\r\n\r\n    return `${año}-${mes}-${dia} ${horas}:${minutos}:${segundos}`;\r\n}\r\n\r\nexport function formatearFecha(date) {\r\n    const fecha = new Date(date);\r\n    const año = fecha.getFullYear();\r\n    const mes = String(fecha.getMonth() + 1).padStart(2, '0');\r\n    const dia = String(fecha.getDate()).padStart(2, '0');\r\n\r\n    return `${año}-${mes}-${dia}`;\r\n}\r\n\r\nexport function fechaTitle(date) {\r\n    const fechaActual = formatearFecha(date);\r\n    const [year, month, day] = fechaActual.split('-'); //separar fechas\r\n\r\n    const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\r\n\r\n    //ajustar el indice del mes\r\n    const nombreMes = meses[parseInt(month, 10) -1];\r\n\r\n    return `${day} de ${nombreMes} del ${year}`;\r\n}\r\n\r\nexport function calcSumaHoras (horaInicial, tiempoEstimado) {\r\n    const [h1, m1] = horaInicial.split(':').map(Number);\r\n    const [h2, m2] = tiempoEstimado.split(':').map(Number);\r\n\r\n    let minutosTotales = m1 + m2;\r\n    let horasTotales = h1 + h2 + Math.floor(minutosTotales / 60);\r\n    minutosTotales = minutosTotales % 60;\r\n\r\n    //formato\r\n    const hh = String(horasTotales).padStart(2, '0');\r\n    const mm = String(minutosTotales).padStart(2, '0');\r\n\r\n    return `${hh}:${mm}`;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}