{"ast":null,"code":"import{useEffect,useState}from'react';import{useUser}from'../components/UserContext';import{useNavigate}from'react-router-dom';import{getFechaHoraActual}from'../utils/time';import ButtonActions from'../components/ButtonActions';import Header from'../components/Header';import axios from'axios';import styled from'styled-components';import GlobalStyles from'../styles/GlobalStyles';import ModalTable from'../components/ModalTable';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PagesDiv=styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;const Mensaje=styled.p`\n    color: ${props=>props.tipo==='error'?'violet':'black'};\n    text-align: center;\n    border: 2px solid ${props=>props.tipo==='error'?'white':'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props=>props.tipo==='mensaje'?'rgba(255, 255, 255, 0.4)':'rgba(0, 0, 0, 0.4)'};\n`;function Tipos(){document.title=\"Tipos | AMM\";const{user}=useUser();const navigate=useNavigate();const[error,setError]=useState('');const[mensaje,setMensaje]=useState('');const[tiposDocumento,setTiposDocumento]=useState([]);const[tiposLimpieza,setTiposLimpieza]=useState([]);const defStatusNuevoDoc={id_tipoDocu:'NA',nombre_tipo:'',user_crea:'',user_modifica:'',modificado_el:''};const defStatusNuevaLimp={id_tipoLimp:'NA',nombre_tipo:'',user_crea:'',user_modifica:'',modificado_el:''};const[nuevoDoc,setNuevoDoc]=useState(defStatusNuevoDoc);const[nuevaLimp,setNuevaLimp]=useState(defStatusNuevaLimp);const[mostrarModalDoc,setMostrarModalDoc]=useState(false);const[mostrarModalLimp,setMostrarModalLimp]=useState(false);// cargar datos\nuseEffect(()=>{cargarDatos();},[]);const cargarDatos=async()=>{try{const[resDoc,resLimp]=await Promise.all([axios.get('http://localhost:3001/tipos/documento'),axios.get('http://localhost:3001/tipos/limpieza')]);setTiposDocumento(resDoc.data);setTiposLimpieza(resLimp.data);}catch(error){console.error('Error en la carga de datos: ',error);}};const handleTipoDocu=async e=>{e.preventDefault();setError('');setMensaje('');if(!user){navigate('/');}const botonPress=e.nativeEvent.submitter.name;const form=e.target;const idSeleccionado=form.id_tipoDocu.value;if(botonPress==='buscar'){if(idSeleccionado!==\"NA\"){const tipoDocuEnc=tiposDocumento.find(docu=>docu.id_tipoDocu===parseInt(idSeleccionado));if(tipoDocuEnc){setNuevoDoc({id_tipoDocu:tipoDocuEnc.id_tipoDocu,nombre_tipo:tipoDocuEnc.nombre_tipo});};}else{setMensaje('Código de tipo de documento invalido para buscar');}}else if(botonPress==='crear/modificar'){if(idSeleccionado!==\"NA\"){//modificar\nconst modFecha=getFechaHoraActual();const datosActualizados={...nuevoDoc,user_modifica:user,modificado_el:modFecha};// -- Varificar que ningun campo necesario este vacio --\nif(datosActualizados.nombre_tipo===''){return setError('El campo nombre no puede estar vacio');};const response=await axios.post('http://localhost:3001/tipos/documento/update',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar                    \n}else if(response.data.error){setError(response.data.error);}}else{//crear\n// -- Varificar que ningun campo necesario este vacio --\nif(nuevoDoc.nombre_tipo===''){return setError('El campo nombre no puede estar vacio');};const response=await axios.post('http://localhost:3001/tipos/documento/insert',{nombre_tipo:nuevoDoc.nombre_tipo,user_crea:user});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoDoc(prev=>({...prev,id_tipoDocu:response.data.id}));}else if(response.data.error){setError(response.data.error);}}}else if(botonPress==='mostrar'){setMostrarModalDoc(true);}else if(botonPress==='eliminar'){if(idSeleccionado==='NA'){setMensaje('Código de tipo de documento invalido para eliminar');}else{const response=await axios.post('http://localhost:3001/tipos/documento/delete',{id_tipoDocu:idSeleccionado});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoDoc(defStatusNuevoDoc);//reinicia formulario \n}else if(response.data.error){setError(response.data.error);}}}};const handleTipoLimp=async e=>{e.preventDefault();setError('');setMensaje('');if(!user){navigate('/');}const botonPress=e.nativeEvent.submitter.name;const form=e.target;const idSeleccionado=form.id_tipoLimp.value;if(botonPress==='buscar'){if(idSeleccionado!==\"NA\"){const tipoLimpEnc=tiposLimpieza.find(limp=>limp.id_tipoLimp===parseInt(idSeleccionado));if(tipoLimpEnc){setNuevaLimp({id_tipoLimp:tipoLimpEnc.id_tipoLimp,nombre_tipo:tipoLimpEnc.nombre_tipo});};}else{setMensaje('Código de tipo de limpieza invalido para buscar');}}else if(botonPress==='crear/modificar'){if(idSeleccionado!==\"NA\"){//modificar\nconst modFecha=getFechaHoraActual();const datosActualizados={...nuevaLimp,user_modifica:user,modificado_el:modFecha};// -- Varificar que ningun campo necesario este vacio --\nif(datosActualizados.nombre_tipo===''){return setError('El campo nombre no puede estar vacio');};const response=await axios.post('http://localhost:3001/tipos/limpieza/update',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar                    \n}else if(response.data.error){setError(response.data.error);}}else{//crear\n// -- Varificar que ningun campo necesario este vacio --\nif(nuevaLimp.nombre_tipo===''){return setError('El campo nombre no puede estar vacio');};const response=await axios.post('http://localhost:3001/tipos/limpieza/insert',{nombre_tipo:nuevaLimp.nombre_tipo,user_crea:user});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevaLimp(prev=>({...prev,id_tipoLimp:response.data.id}));}else if(response.data.error){setError(response.data.error);}}}else if(botonPress==='mostrar'){setMostrarModalLimp(true);}else if(botonPress==='eliminar'){if(idSeleccionado==='NA'){setMensaje('Código de tipo de limpieza invalido para eliminar');}else{const response=await axios.post('http://localhost:3001/tipos/limpieza/delete',{id_tipoLimp:idSeleccionado});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevaLimp(defStatusNuevaLimp);//reinicia formulario \n}else if(response.data.error){setError(response.data.error);}}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(PagesDiv,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"error\",children:error}),mensaje&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"mensaje\",children:mensaje}),/*#__PURE__*/_jsxs(\"form\",{className:\"form_pages\",onSubmit:handleTipoDocu,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tipo de Documento\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_display\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_tipoDocu\",children:\"C\\xF3digo\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_tipoDocu\",id:\"id_tipoDocu\",value:nuevoDoc.id_tipoDocu,onChange:e=>setNuevoDoc(nuevoDoc=>({...nuevoDoc,id_tipoDocu:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Nuevo registro\"},\"NA\"),tiposDocumento.map(docu=>/*#__PURE__*/_jsx(\"option\",{value:docu.id_tipoDocu,children:docu.id_tipoDocu},docu.id_tipoDocu))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nombre_tipo\",children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre_tipo\",id:\"nombre_tipo\",value:nuevoDoc.nombre_tipo,onChange:e=>setNuevoDoc(nuevoDoc=>({...nuevoDoc,nombre_tipo:e.target.value.trim()}))})]}),/*#__PURE__*/_jsx(ButtonActions,{})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form_pages\",onSubmit:handleTipoLimp,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tipo de Limpieza\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_display\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_tipoLimp\",children:\"C\\xF3digo\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_tipoLimp\",id:\"id_tipoLimp\",value:nuevaLimp.id_tipoLimp,onChange:e=>setNuevaLimp(nuevaLimp=>({...nuevaLimp,id_tipoLimp:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Nuevo registro\"},\"NA\"),tiposLimpieza.map(limp=>/*#__PURE__*/_jsx(\"option\",{value:limp.id_tipoLimp,children:limp.id_tipoLimp},limp.id_tipoLimp))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nombre_tipo\",children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre_tipo\",id:\"nombre_tipo\",value:nuevaLimp.nombre_tipo,onChange:e=>setNuevaLimp(nuevaLimp=>({...nuevaLimp,nombre_tipo:e.target.value.trim()}))})]}),/*#__PURE__*/_jsx(ButtonActions,{})]})}),mostrarModalDoc&&/*#__PURE__*/_jsx(ModalTable,{onClose:()=>setMostrarModalDoc(false),datos:tiposDocumento,columnas:[{label:'Código',field:'id_tipoDocu'},{label:'Nombre',field:'nombre_tipo'},{label:'Creador',field:'user_crea'},{label:'Fecha creación',field:'creado_el'},{label:'Modificador',field:'user_modifica'},{label:'Fecha modificación',field:'modificado_el'}],title:\"Tipos de Documento\"}),mostrarModalLimp&&/*#__PURE__*/_jsx(ModalTable,{onClose:()=>setMostrarModalLimp(false),datos:tiposLimpieza,columnas:[{label:'Código',field:'id_tipoLimp'},{label:'Nombre',field:'nombre_tipo'},{label:'Creador',field:'user_crea'},{label:'Fecha creación',field:'creado_el'},{label:'Modificador',field:'user_modifica'},{label:'Fecha modificación',field:'modificado_el'}],title:\"Tipos de Limpieza\"})]})]});}export default Tipos;","map":{"version":3,"names":["useEffect","useState","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PagesDiv","div","Mensaje","p","props","tipo","Tipos","document","title","user","navigate","error","setError","mensaje","setMensaje","tiposDocumento","setTiposDocumento","tiposLimpieza","setTiposLimpieza","defStatusNuevoDoc","id_tipoDocu","nombre_tipo","user_crea","user_modifica","modificado_el","defStatusNuevaLimp","id_tipoLimp","nuevoDoc","setNuevoDoc","nuevaLimp","setNuevaLimp","mostrarModalDoc","setMostrarModalDoc","mostrarModalLimp","setMostrarModalLimp","cargarDatos","resDoc","resLimp","Promise","all","get","data","console","handleTipoDocu","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","value","tipoDocuEnc","find","docu","parseInt","modFecha","datosActualizados","response","post","prev","id","handleTipoLimp","tipoLimpEnc","limp","children","className","onSubmit","htmlFor","onChange","map","type","trim","onClose","datos","columnas","label","field"],"sources":["C:/Users/nyath/Documents/Git proyects/GA8-220501096-AA1-EV01/amm/frontend/src/pages/Tipos.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useUser } from '../components/UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'violet' : 'black')};\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nfunction Tipos() {\r\n    document.title = \"Tipos | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n    \r\n    const [tiposDocumento, setTiposDocumento] = useState([]);\r\n    const [tiposLimpieza, setTiposLimpieza] = useState([]);\r\n\r\n    const defStatusNuevoDoc = { id_tipoDocu: 'NA', nombre_tipo: '', user_crea: '', user_modifica: '', modificado_el: '' };\r\n    const defStatusNuevaLimp = { id_tipoLimp: 'NA', nombre_tipo: '', user_crea: '', user_modifica: '', modificado_el: '' };\r\n\r\n    const [nuevoDoc, setNuevoDoc] = useState(defStatusNuevoDoc);\r\n    const [nuevaLimp, setNuevaLimp] = useState(defStatusNuevaLimp);\r\n    const [mostrarModalDoc, setMostrarModalDoc] = useState(false);\r\n    const [mostrarModalLimp, setMostrarModalLimp] = useState(false);\r\n\r\n    // cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resDoc, resLimp] = await Promise.all([\r\n                axios.get('http://localhost:3001/tipos/documento'),\r\n                axios.get('http://localhost:3001/tipos/limpieza')\r\n            ]);\r\n            setTiposDocumento(resDoc.data);\r\n            setTiposLimpieza(resLimp.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos: ', error);\r\n        }\r\n    };\r\n\r\n    const handleTipoDocu = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setMensaje('');\r\n        \r\n        if(!user){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_tipoDocu.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const tipoDocuEnc = tiposDocumento.find(docu => docu.id_tipoDocu === parseInt(idSeleccionado));\r\n\r\n                if(tipoDocuEnc) {\r\n                    setNuevoDoc({\r\n                        id_tipoDocu: tipoDocuEnc.id_tipoDocu,\r\n                        nombre_tipo: tipoDocuEnc.nombre_tipo\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de tipo de documento invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoDoc,\r\n                    user_modifica: user,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                if(datosActualizados.nombre_tipo === ''){\r\n                    return setError('El campo nombre no puede estar vacio');\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/tipos/documento/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                if(nuevoDoc.nombre_tipo === ''){\r\n                    return setError('El campo nombre no puede estar vacio');\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/tipos/documento/insert', {\r\n                    nombre_tipo: nuevoDoc.nombre_tipo,\r\n                    user_crea: user\r\n                });\r\n                \r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoDoc(prev => ({ ...prev, id_tipoDocu: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            setMostrarModalDoc(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de tipo de documento invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/tipos/documento/delete', {\r\n                    id_tipoDocu: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoDoc(defStatusNuevoDoc); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTipoLimp = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setMensaje('');\r\n\r\n        if(!user){\r\n            navigate('/');\r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_tipoLimp.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const tipoLimpEnc = tiposLimpieza.find(limp => limp.id_tipoLimp === parseInt(idSeleccionado));\r\n\r\n                if(tipoLimpEnc) {\r\n                    setNuevaLimp({\r\n                        id_tipoLimp: tipoLimpEnc.id_tipoLimp,\r\n                        nombre_tipo: tipoLimpEnc.nombre_tipo\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de tipo de limpieza invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevaLimp,\r\n                    user_modifica: user,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                if(datosActualizados.nombre_tipo === ''){\r\n                    return setError('El campo nombre no puede estar vacio');\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/tipos/limpieza/update', datosActualizados);\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar                    \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            } else {    \r\n                //crear\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                if(nuevaLimp.nombre_tipo === ''){\r\n                    return setError('El campo nombre no puede estar vacio');\r\n                };\r\n\r\n                const response = await axios.post('http://localhost:3001/tipos/limpieza/insert', {\r\n                    nombre_tipo: nuevaLimp.nombre_tipo,\r\n                    user_crea: user\r\n                });\r\n                if (response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevaLimp(prev => ({ ...prev, id_tipoLimp: response.data.id}));\r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            setMostrarModalLimp(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de tipo de limpieza invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/tipos/limpieza/delete', {\r\n                    id_tipoLimp: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevaLimp(defStatusNuevaLimp); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles/>\r\n        <Header/>\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleTipoDocu}>\r\n                    <h2>Tipo de Documento</h2>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_tipoDocu\">Código</label>\r\n                        <select \r\n                            name=\"id_tipoDocu\"\r\n                            id=\"id_tipoDocu\"\r\n                            value={nuevoDoc.id_tipoDocu}\r\n                            onChange={(e) => setNuevoDoc(nuevoDoc => ({ ...nuevoDoc, id_tipoDocu: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {tiposDocumento.map(docu => (\r\n                                <option key={docu.id_tipoDocu} value={docu.id_tipoDocu}>\r\n                                    {docu.id_tipoDocu}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_tipo\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_tipo\"\r\n                            id=\"nombre_tipo\"\r\n                            value={nuevoDoc.nombre_tipo}\r\n                            onChange={(e) => setNuevoDoc(nuevoDoc => ({ ...nuevoDoc, nombre_tipo: e.target.value.trim()}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            <div>\r\n            <form className=\"form_pages\" onSubmit={handleTipoLimp}>\r\n                    <h2>Tipo de Limpieza</h2>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_tipoLimp\">Código</label>\r\n                        <select \r\n                            name=\"id_tipoLimp\"\r\n                            id=\"id_tipoLimp\"\r\n                            value={nuevaLimp.id_tipoLimp}\r\n                            onChange={(e) => setNuevaLimp(nuevaLimp => ({ ...nuevaLimp, id_tipoLimp: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {tiposLimpieza.map(limp => (\r\n                                <option key={limp.id_tipoLimp} value={limp.id_tipoLimp}>\r\n                                    {limp.id_tipoLimp}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_tipo\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_tipo\"\r\n                            id=\"nombre_tipo\"\r\n                            value={nuevaLimp.nombre_tipo}\r\n                            onChange={(e) => setNuevaLimp(nuevaLimp => ({ ...nuevaLimp, nombre_tipo: e.target.value.trim()}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>                    \r\n                </form>\r\n            </div>\r\n            {mostrarModalDoc && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModalDoc(false)}\r\n                    datos={tiposDocumento}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_tipoDocu'}, \r\n                        {label: 'Nombre', field: 'nombre_tipo'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Tipos de Documento\"\r\n                />\r\n            )}\r\n            {mostrarModalLimp && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModalLimp(false)}\r\n                    datos={tiposLimpieza}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_tipoLimp'}, \r\n                        {label: 'Nombre', field: 'nombre_tipo'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Tipos de Limpieza\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>);\r\n}\r\n\r\nexport default Tipos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}