{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useUser}from\"../components/UserContext\";import{useNavigate}from\"react-router-dom\";import{getFechaHoraActual,calcSumaHoras,formatearFecha}from'../utils/time';import ButtonActions from'../components/ButtonActions';import Header from'../components/Header';import axios from'axios';import styled from'styled-components';import GlobalStyles from'../styles/GlobalStyles';import ModalTable from'../components/ModalTable';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Mensaje=styled.p`\n    color: ${props=>props.tipo==='error'?'violet':'black'};\n    text-align: center;\n    border: 2px solid ${props=>props.tipo==='error'?'white':'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props=>props.tipo==='mensaje'?'rgba(255, 255, 255, 0.4)':'rgba(0, 0, 0, 0.4)'};\n`;const PagesDiv=styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;function Servicios(){document.title=\"Servicios | AMM\";const{user}=useUser();const navigate=useNavigate();const[error,setError]=useState('');const[mensaje,setMensaje]=useState('');const inicialStateForm={id_servicio:'NA',id_cliente:'NA',id_equipo:'NA',id_tipoLimp:'NA',fecha:'',hora:'',tiempo_estimado:'',tiempo_finalizacion:'',precio:'',observacion:'',user_crea:'',user_modifica:'',modificado_el:''};const[servicios,setServicios]=useState([]);const[clientes,setClientes]=useState([]);const[equipos,setEquipos]=useState([]);const[tiposLimpieza,setTiposLimpieza]=useState([]);const[nuevoServicio,setNuevoServicio]=useState(inicialStateForm);const[mostrarModal,setMostrarModal]=useState(false);const[datosModal,setDatosModal]=useState([]);//cargar datos\nuseEffect(()=>{cargarDatos();},[]);const cargarDatos=async()=>{try{const[resServ,resClient,resEquip,resTLimp]=await Promise.all([axios.get('http://localhost:3001/servicios'),axios.get('http://localhost:3001/clientes'),axios.get('http://localhost:3001/equipos'),axios.get('http://localhost:3001/tipos/limpieza')]);setServicios(resServ.data);setClientes(resClient.data);setEquipos(resEquip.data);setTiposLimpieza(resTLimp.data);}catch(error){console.error('Error en la carga de datos ',error);}};const handleServicio=async e=>{e.preventDefault();setMensaje('');setError('');if(!user){navigate('/');}const botonPress=e.nativeEvent.submitter.name;const form=e.target;const idSeleccionado=form.id_servicio.value;if(botonPress==='buscar'){if(idSeleccionado!==\"NA\"){const servicioEnc=servicios.find(usua=>usua.id_usuario===idSeleccionado);if(servicioEnc){setNuevoServicio({id_cliente:servicioEnc.id_cliente,id_equipo:servicioEnc.id_equipo,id_tipoLimp:servicioEnc.id_tipoLimp,fecha:servicioEnc.fecha,hora:servicioEnc.hora,tiempo_estimado:servicioEnc.tiempo_estimado,tiempo_finalizacion:servicioEnc.tiempo_finalizacion,precio:servicioEnc.precio,observacion:servicioEnc.observacion});};}else{setMensaje('C칩digo de servicio invalido para buscar');}}else if(botonPress==='crear/modificar'){if(idSeleccionado!==\"NA\"){//modificar\nconst modFecha=getFechaHoraActual();const datosActualizados={...nuevoServicio,user_modifica:user,modificado_el:modFecha};// -- Varificar que ningun campo necesario este vacio --\nconst camposExcluidos=['observacion','user_crea'];const camposVacios=Object.entries(datosActualizados).filter(_ref=>{let[clave,valor]=_ref;return!camposExcluidos.includes(clave)&&(valor===''||valor==='NA');});console.log(camposVacios.map(_ref2=>{let[clave]=_ref2;return clave;}));if(camposVacios.length>0){setError(`Faltan datos v치lidos en uno o varios campos`);}else{const response=await axios.post('http://localhost:3001/servicios/update',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar                    \n}else if(response.data.error){setError(response.data.error);}}}else{//crear\nconst datosActualizados={...nuevoServicio,user_crea:user};// -- Varificar que ningun campo necesario este vacio --\nconst camposExcluidos=['id_servicio','observacion','user_modifica','modificado_el'];const camposVacios=Object.entries(datosActualizados).filter(_ref3=>{let[clave,valor]=_ref3;return!camposExcluidos.includes(clave)&&(valor===''||valor==='NA');});console.log(camposVacios.map(_ref4=>{let[clave]=_ref4;return clave;}));if(camposVacios.length>0){setError(`Faltan datos v치lidos en uno o varios campos`);}else{const response=await axios.post('http://localhost:3001/servicios/insert',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoServicio(prev=>({...prev,id_servicio:response.data.id}));}else if(response.data.error){setError(response.data.error);}}}}else if(botonPress==='mostrar'){const datosCompletos=servicios.map(serv=>{const cliente=clientes.find(u=>u.id_cliente===serv.id_cliente);const equipo=equipos.find(u=>u.id_equipo===serv.id_equipo);const tipoLimp=tiposLimpieza.find(u=>u.id_tipoLimp===serv.id_tipoLimp);return{...serv,fecha:formatearFecha(serv.fecha),nombre_cliente:cliente.nombre_cliente+' '+cliente.apellido_cliente,nombre_equipo:equipo.nombre_equipo,nombre_tipo_limpieza:tipoLimp.nombre_tipo};});setDatosModal(datosCompletos);setMostrarModal(true);}else if(botonPress==='eliminar'){if(idSeleccionado==='NA'){setMensaje('C칩digo de servicio invalido para eliminar');}else{const response=await axios.post('http://localhost:3001/servicios/delete',{id_servicio:idSeleccionado});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoServicio(inicialStateForm);//reinicia formulario \n}else if(response.data.error){setError(response.data.error);}}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(PagesDiv,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"error\",children:error}),mensaje&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"mensaje\",children:mensaje}),/*#__PURE__*/_jsxs(\"form\",{className:\"form_pages\",onSubmit:handleServicio,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form_display\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_servicio\",children:\"C\\xF3digo\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_servicio\",id:\"id_servicio\",value:nuevoServicio.id_servicio,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,id_servicio:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Nuevo registro\"},\"NA\"),servicios.map(serv=>/*#__PURE__*/_jsx(\"option\",{value:serv.id_servicio,children:serv.id_servicio},serv.id_servicio))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_cliente\",children:\"Cliente\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_cliente\",id:\"id_cliente\",value:nuevoServicio.id_cliente,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,id_cliente:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Seleccionar registro\"},\"NA\"),clientes.map(cl=>/*#__PURE__*/_jsxs(\"option\",{value:cl.id_cliente,children:[cl.nombre_cliente,\" \",cl.apellido_cliente]},cl.id_cliente))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_equipo\",children:\"Equipo\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_equipo\",id:\"id_equipo\",value:nuevoServicio.id_equipo,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,id_equipo:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Seleccionar registro\"},\"NA\"),equipos.map(eq=>/*#__PURE__*/_jsx(\"option\",{value:eq.id_equipo,children:eq.nombre_equipo},eq.id_equipo))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_tipoLimp\",children:\"Limpieza\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_tipoLimp\",id:\"id_tipoLimp\",value:nuevoServicio.id_tipoLimp,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,id_tipoLimp:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Seleccionar registro\"},\"NA\"),tiposLimpieza.map(tl=>/*#__PURE__*/_jsx(\"option\",{value:tl.id_tipoLimp,children:tl.nombre_tipo},tl.id_tipoLimp))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fecha\",children:\"Fecha\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",min:new Date().toLocaleDateString('en-CA')//evita el ingreso de fechas anteriores\n,name:\"fecha\",id:\"fecha\",value:nuevoServicio.fecha,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,fecha:e.target.value}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"hora\",children:\"Hora\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"hora\",id:\"hora\",value:nuevoServicio.hora,onChange:e=>{const nuevaHora=e.target.value;const nuevaFinal=calcSumaHoras(nuevaHora,nuevoServicio.tiempo_estimado||'00:00');setNuevoServicio(nuevoServicio=>({...nuevoServicio,hora:nuevaHora,tiempo_finalizacion:nuevaFinal}));}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tiempo_estimado\",children:\"Tiempo de servicio\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"tiempo_estimado\",id:\"tiempo_estimado\",value:nuevoServicio.tiempo_estimado,onChange:e=>{const nuevoTiempo=e.target.value;const nuevaFinal=calcSumaHoras(nuevoServicio.hora||'00:00',nuevoTiempo);setNuevoServicio(nuevoServicio=>({...nuevoServicio,tiempo_estimado:nuevoTiempo,tiempo_finalizacion:nuevaFinal}));}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tiempo_finalizacion\",children:\"Hora de finalizaci\\xF3n\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"tiempo_finalizacion\",id:\"tiempo_finalizacion\",value:nuevoServicio.tiempo_finalizacion,disabled:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"precio\",children:\"Valor\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\"// valor minimo aceptado\n,step:\"0.01\"// acepta valores decimales\n,name:\"precio\",id:\"precio\",value:nuevoServicio.precio,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,precio:e.target.value}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"observacion\",children:\"Observaciones\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"observacion\",id:\"observacion\",value:nuevoServicio.observacion,onChange:e=>setNuevoServicio(nuevoServicio=>({...nuevoServicio,observacion:e.target.value}))})]}),/*#__PURE__*/_jsx(ButtonActions,{})]})]}),mostrarModal&&/*#__PURE__*/_jsx(ModalTable,{onClose:()=>setMostrarModal(false),datos:datosModal,columnas:[{label:'C칩digo',field:'id_servicio'},{label:'Cliente',field:'nombre_cliente'},{label:'Equipo',field:'nombre_equipo'},{label:'Limpieza',field:'nombre_tipo_limpieza'},{label:'Fecha',field:'fecha'},{label:'Hora',field:'hora'},{label:'Tiempo de servicio',field:'tiempo_estimado'},{label:'Finalizaci칩n',field:'tiempo_finalizacion'},{label:'Valor',field:'precio'},{label:'Observaci칩',field:'observacion'},{label:'Creador',field:'user_crea'},{label:'Fecha creaci칩n',field:'creado_el'},{label:'Modificador',field:'user_modifica'},{label:'Fecha modificaci칩n',field:'modificado_el'}],title:\"Servicios\"})]})]});};export default Servicios;","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","calcSumaHoras","formatearFecha","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Mensaje","p","props","tipo","PagesDiv","div","Servicios","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_servicio","id_cliente","id_equipo","id_tipoLimp","fecha","hora","tiempo_estimado","tiempo_finalizacion","precio","observacion","user_crea","user_modifica","modificado_el","servicios","setServicios","clientes","setClientes","equipos","setEquipos","tiposLimpieza","setTiposLimpieza","nuevoServicio","setNuevoServicio","mostrarModal","setMostrarModal","datosModal","setDatosModal","cargarDatos","resServ","resClient","resEquip","resTLimp","Promise","all","get","data","console","handleServicio","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","value","servicioEnc","find","usua","id_usuario","modFecha","datosActualizados","camposExcluidos","camposVacios","Object","entries","filter","_ref","clave","valor","includes","log","map","_ref2","length","response","post","_ref3","_ref4","prev","id","datosCompletos","serv","cliente","u","equipo","tipoLimp","nombre_cliente","apellido_cliente","nombre_equipo","nombre_tipo_limpieza","nombre_tipo","children","className","onSubmit","htmlFor","onChange","cl","eq","tl","type","min","Date","toLocaleDateString","nuevaHora","nuevaFinal","nuevoTiempo","disabled","step","onClose","datos","columnas","label","field"],"sources":["C:/Users/nyath/Documents/Git proyects/GA8-220501096-AA1-EV01/amm/frontend/src/pages/Servicios.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual, calcSumaHoras, formatearFecha } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'violet' : 'black')};\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Servicios() {\r\n    document.title = \"Servicios | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_servicio: 'NA', id_cliente: 'NA', id_equipo: 'NA', id_tipoLimp: 'NA', fecha: '', hora: '', tiempo_estimado: '', tiempo_finalizacion: '', precio: '', observacion: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [servicios, setServicios] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [equipos, setEquipos] = useState([]);\r\n    const [tiposLimpieza, setTiposLimpieza] = useState([]);\r\n    const [nuevoServicio, setNuevoServicio] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n    const [datosModal, setDatosModal] = useState([]);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resServ, resClient, resEquip, resTLimp] = await Promise.all([\r\n                axios.get('http://localhost:3001/servicios'),\r\n                axios.get('http://localhost:3001/clientes'),\r\n                axios.get('http://localhost:3001/equipos'),\r\n                axios.get('http://localhost:3001/tipos/limpieza')\r\n            ]);\r\n            setServicios(resServ.data);\r\n            setClientes(resClient.data);\r\n            setEquipos(resEquip.data);\r\n            setTiposLimpieza(resTLimp.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleServicio = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_servicio.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const servicioEnc = servicios.find(usua => usua.id_usuario === idSeleccionado);\r\n\r\n                if(servicioEnc) {\r\n                    setNuevoServicio({\r\n                        id_cliente: servicioEnc.id_cliente,\r\n                        id_equipo: servicioEnc.id_equipo,\r\n                        id_tipoLimp: servicioEnc.id_tipoLimp,\r\n                        fecha: servicioEnc.fecha,\r\n                        hora: servicioEnc.hora,\r\n                        tiempo_estimado: servicioEnc.tiempo_estimado,\r\n                        tiempo_finalizacion: servicioEnc.tiempo_finalizacion,\r\n                        precio: servicioEnc.precio,\r\n                        observacion: servicioEnc.observacion\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('C칩digo de servicio invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoServicio,\r\n                    user_modifica: user,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['observacion', 'user_crea'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos v치lidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/servicios/update', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar                    \r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoServicio,\r\n                    user_crea: user\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['id_servicio', 'observacion', 'user_modifica', 'modificado_el'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos v치lidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/servicios/insert', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar\r\n                        setNuevoServicio(prev => ({ ...prev, id_servicio: response.data.id}));\r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            const datosCompletos = servicios.map(serv => {\r\n                const cliente = clientes.find(u => u.id_cliente === serv.id_cliente);\r\n                const equipo = equipos.find(u => u.id_equipo === serv.id_equipo);\r\n                const tipoLimp = tiposLimpieza.find(u => u.id_tipoLimp === serv.id_tipoLimp);\r\n                \r\n                return {\r\n                    ...serv,\r\n                    fecha: formatearFecha(serv.fecha),\r\n                    nombre_cliente: cliente.nombre_cliente + ' ' + cliente.apellido_cliente,\r\n                    nombre_equipo: equipo.nombre_equipo,\r\n                    nombre_tipo_limpieza: tipoLimp.nombre_tipo\r\n                }\r\n            });\r\n            \r\n            setDatosModal(datosCompletos);\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('C칩digo de servicio invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/servicios/delete', {\r\n                    id_servicio: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoServicio(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleServicio}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_servicio\">C칩digo</label>\r\n                        <select \r\n                            name=\"id_servicio\"\r\n                            id=\"id_servicio\"\r\n                            value={nuevoServicio.id_servicio}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_servicio: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {servicios.map(serv => (\r\n                                <option key={serv.id_servicio} value={serv.id_servicio}>\r\n                                    {serv.id_servicio}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_cliente\">Cliente</label>\r\n                        <select \r\n                            name=\"id_cliente\"\r\n                            id=\"id_cliente\"\r\n                            value={nuevoServicio.id_cliente}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_cliente: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {clientes.map(cl => (\r\n                                <option key={cl.id_cliente} value={cl.id_cliente}>\r\n                                    {cl.nombre_cliente} {cl.apellido_cliente}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_equipo\">Equipo</label>\r\n                        <select \r\n                            name=\"id_equipo\"\r\n                            id=\"id_equipo\"\r\n                            value={nuevoServicio.id_equipo}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_equipo: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {equipos.map(eq => (\r\n                                <option key={eq.id_equipo} value={eq.id_equipo}>\r\n                                    {eq.nombre_equipo}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_tipoLimp\">Limpieza</label>\r\n                        <select \r\n                            name=\"id_tipoLimp\"\r\n                            id=\"id_tipoLimp\"\r\n                            value={nuevoServicio.id_tipoLimp}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, id_tipoLimp: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                            {tiposLimpieza.map(tl => (\r\n                                <option key={tl.id_tipoLimp} value={tl.id_tipoLimp}>\r\n                                    {tl.nombre_tipo}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"fecha\">Fecha</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            min={new Date().toLocaleDateString('en-CA')} //evita el ingreso de fechas anteriores\r\n                            name=\"fecha\"\r\n                            id=\"fecha\"\r\n                            value={nuevoServicio.fecha}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, fecha: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"hora\">Hora</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"hora\"\r\n                            id=\"hora\"\r\n                            value={nuevoServicio.hora}\r\n                            onChange={(e) => {\r\n                                const nuevaHora = e.target.value;\r\n                                const nuevaFinal = calcSumaHoras(nuevaHora, nuevoServicio.tiempo_estimado || '00:00');\r\n                                setNuevoServicio(nuevoServicio => ({\r\n                                    ...nuevoServicio,\r\n                                    hora: nuevaHora,\r\n                                    tiempo_finalizacion: nuevaFinal\r\n                                }));\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"tiempo_estimado\">Tiempo de servicio</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"tiempo_estimado\"\r\n                            id=\"tiempo_estimado\"\r\n                            value={nuevoServicio.tiempo_estimado}\r\n                            onChange={(e) => {\r\n                                const nuevoTiempo = e.target.value;\r\n                                const nuevaFinal = calcSumaHoras(nuevoServicio.hora || '00:00', nuevoTiempo);\r\n                                setNuevoServicio(nuevoServicio => ({\r\n                                    ...nuevoServicio,\r\n                                    tiempo_estimado: nuevoTiempo,\r\n                                    tiempo_finalizacion: nuevaFinal\r\n                                }));\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"tiempo_finalizacion\">Hora de finalizaci칩n</label>\r\n                        <input\r\n                            type=\"time\"\r\n                            name=\"tiempo_finalizacion\"\r\n                            id=\"tiempo_finalizacion\"\r\n                            value={nuevoServicio.tiempo_finalizacion}\r\n                            disabled\r\n                        />\r\n                        <label htmlFor=\"precio\">Valor</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"0\" // valor minimo aceptado\r\n                            step=\"0.01\" // acepta valores decimales\r\n                            name=\"precio\"\r\n                            id=\"precio\"\r\n                            value={nuevoServicio.precio}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, precio: e.target.value}))}\r\n                        />\r\n                        <label htmlFor=\"observacion\">Observaciones</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"observacion\"\r\n                            id=\"observacion\"\r\n                            value={nuevoServicio.observacion}\r\n                            onChange={(e) => setNuevoServicio(nuevoServicio => ({ ...nuevoServicio, observacion: e.target.value}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={datosModal}\r\n                    columnas={[\r\n                        {label: 'C칩digo', field:'id_servicio'}, \r\n                        {label: 'Cliente', field: 'nombre_cliente'},\r\n                        {label: 'Equipo', field: 'nombre_equipo'},\r\n                        {label: 'Limpieza', field: 'nombre_tipo_limpieza'},\r\n                        {label: 'Fecha', field: 'fecha'},\r\n                        {label: 'Hora', field: 'hora'},\r\n                        {label: 'Tiempo de servicio', field: 'tiempo_estimado'},\r\n                        {label: 'Finalizaci칩n', field: 'tiempo_finalizacion'},\r\n                        {label: 'Valor', field: 'precio'},\r\n                        {label: 'Observaci칩', field: 'observacion'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creaci칩n', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificaci칩n', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Servicios\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Servicios;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}