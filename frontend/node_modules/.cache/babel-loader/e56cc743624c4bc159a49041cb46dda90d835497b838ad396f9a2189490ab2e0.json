{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\viewServUser.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    max-height: 80vh;\n    overflow-y: auto;\n    width: 80%;\n`;\n_c2 = ModalContent;\nconst CloseButton = styled.button`\n    float: right;\n    margin-bottom: 10px;\n`;\n_c3 = CloseButton;\nconst Table = styled.table`\n    width: 100%;\n    border-collapse: collapse;\n\n    th, td {\n        padding: 8px;\n        border: 1px solid #ccc;\n        text-align: center;\n    }\n\n    th {\n        background-color: #f4f4f4;\n    }\n`;\n_c4 = Table;\nfunction ViewServicios() {\n  _s();\n  document.title = \"Servicios asignados | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [usuarios, setUsuarios] = useState([]);\n  const [tiposUsuario, setTiposUsuario] = useState([]);\n  const [tiposDocumento, setTiposDocumento] = useState([]);\n  const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [datosModal, setDatosModal] = useState([]);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const [resUser, resTUs, resTDo] = await Promise.all([axios.get('http://localhost:3001/usuarios'), axios.get('http://localhost:3001/tipos/usuario'), axios.get('http://localhost:3001/tipos/documento')]);\n      setUsuarios(resUser.data);\n      setTiposUsuario(resTUs.data);\n      setTiposDocumento(resTDo.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const createdId = formulario => {\n    //función para crear id personalizado\n    if (formulario.id_tipoUsua.value === 'NA' || formulario.nombres.value === '' || formulario.apellidos.value === '') {\n      return '';\n    }\n    const tipoUs = tiposUsuario.find(us => us.id_tipoUsua === parseInt(formulario.id_tipoUsua.value));\n    const tpU = tipoUs.nombre_tipo.substring(0, 3).toUpperCase();\n    const nomb = formulario.nombres.value.substring(0, 2).toUpperCase();\n    const apell = formulario.apellidos.value.substring(0, 2).toUpperCase();\n    const aleatoriNumb = Math.floor(100000 + Math.random() * 900000);\n    return `${tpU}${nomb}${apell}${aleatoriNumb}`;\n  };\n  const handleUsuario = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user || user.id_tipoUsua === 3) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_usuario.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const usuarioEnc = usuarios.find(usua => usua.id_usuario === idSeleccionado);\n        if (usuarioEnc) {\n          setNuevoUsuario({\n            id_tipoUsua: usuarioEnc.id_tipoUsua,\n            nombre_usuario: usuarioEnc.nombre_usuario,\n            contrasena_usuario: usuarioEnc.contrasena_usuario,\n            id_tipoDocu: usuarioEnc.id_tipoDocu,\n            documento_usuario: usuarioEnc.documento_usuario,\n            nombres: usuarioEnc.nombres,\n            apellidos: usuarioEnc.apellidos,\n            telefono_usuario: usuarioEnc.telefono_usuario,\n            correo_usuario: usuarioEnc.correo_usuario\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de usuario invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoUsuario,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n\n        // -- Varificar que ningun campo necesario este vacio --\n        const camposExcluidos = ['user_crea'];\n        const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\n        console.log(camposVacios.map(([clave]) => clave));\n        if (camposVacios.length > 0) {\n          setError(`Faltan datos válidos en uno o varios campos`);\n        } else {\n          const response = await axios.post('http://localhost:3001/usuarios/update', datosActualizados);\n          if (response.data.mensaje) {\n            setMensaje(response.data.mensaje);\n            cargarDatos(); //volver a cargar datos para actualizar                    \n          } else if (response.data.error) {\n            setError(response.data.error);\n          }\n        }\n      } else {\n        //crear\n        const datosActualizados = {\n          ...nuevoUsuario,\n          id_usuario: createdId(form),\n          user_crea: user.nombre_usuario\n        };\n\n        // -- Varificar que ningun campo necesario este vacio --\n        const camposExcluidos = ['id_usuario', 'user_modifica', 'modificado_el'];\n        const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\n        console.log(camposVacios.map(([clave]) => clave));\n        if (camposVacios.length > 0) {\n          setError(`Faltan datos válidos en uno o varios campos`);\n        } else {\n          const response = await axios.post('http://localhost:3001/usuarios/insert', datosActualizados);\n          if (response.data.mensaje) {\n            setMensaje(response.data.mensaje);\n            cargarDatos(); //volver a cargar datos para actualizar\n            setNuevoUsuario(prev => ({\n              ...prev,\n              id_usuario: response.data.id\n            }));\n          } else if (response.data.error) {\n            setError(response.data.error);\n          }\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      const datosCompletos = usuarios.filter(us => us.id_usuario !== 'NA').map(us => {\n        const tipoUsua = tiposUsuario.find(u => u.id_tipoUsua === us.id_tipoUsua);\n        const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === us.id_tipoDocu);\n        return {\n          ...us,\n          nombre_tipo_usuario: tipoUsua.nombre_tipo,\n          nombre_tipo_documento: tipoDocu.nombre_tipo\n        };\n      });\n      setDatosModal(datosCompletos);\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de usuario invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/usuarios/delete', {\n          id_usuario: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoUsuario(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: onClose,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'black'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columnas.map(({\n              label\n            }) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: label\n            }, label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: datos.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columnas.map(({\n              field\n            }) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item[field]\n            }, field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewServicios, \"nu3A2O+RdZzfUhvF+amavXEngK4=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c5 = ViewServicios;\n;\nexport default ViewServicios;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"CloseButton\");\n$RefreshReg$(_c4, \"Table\");\n$RefreshReg$(_c5, \"ViewServicios\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","CloseButton","button","_c3","Table","table","_c4","ViewServicios","_s","document","title","user","navigate","usuarios","setUsuarios","tiposUsuario","setTiposUsuario","tiposDocumento","setTiposDocumento","nuevoUsuario","setNuevoUsuario","inicialStateForm","mostrarModal","setMostrarModal","datosModal","setDatosModal","cargarDatos","resUser","resTUs","resTDo","Promise","all","get","data","error","console","createdId","formulario","id_tipoUsua","value","nombres","apellidos","tipoUs","find","us","parseInt","tpU","nombre_tipo","substring","toUpperCase","nomb","apell","aleatoriNumb","Math","floor","random","handleUsuario","e","preventDefault","setMensaje","setError","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","id_usuario","usuarioEnc","usua","nombre_usuario","contrasena_usuario","id_tipoDocu","documento_usuario","telefono_usuario","correo_usuario","modFecha","datosActualizados","user_modifica","modificado_el","camposExcluidos","camposVacios","Object","entries","filter","clave","valor","includes","log","map","length","response","post","mensaje","user_crea","prev","id","datosCompletos","tipoUsua","u","tipoDocu","nombre_tipo_usuario","nombre_tipo_documento","children","onClick","onClose","fileName","_jsxFileName","lineNumber","columnNumber","style","color","columnas","label","datos","item","index","field","_c5","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/viewServUser.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst ModalOverlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n    background: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    max-height: 80vh;\r\n    overflow-y: auto;\r\n    width: 80%;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n    float: right;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n\r\n    th, td {\r\n        padding: 8px;\r\n        border: 1px solid #ccc;\r\n        text-align: center;\r\n    }\r\n\r\n    th {\r\n        background-color: #f4f4f4;\r\n    }\r\n`;\r\n\r\nfunction ViewServicios() {\r\n    document.title = \"Servicios asignados | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [tiposUsuario, setTiposUsuario] = useState([]);\r\n    const [tiposDocumento, setTiposDocumento] = useState([]);\r\n    const [nuevoUsuario, setNuevoUsuario] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n    const [datosModal, setDatosModal] = useState([]);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resUser, resTUs, resTDo] = await Promise.all([\r\n                axios.get('http://localhost:3001/usuarios'),\r\n                axios.get('http://localhost:3001/tipos/usuario'),\r\n                axios.get('http://localhost:3001/tipos/documento')\r\n            ]);\r\n            setUsuarios(resUser.data);\r\n            setTiposUsuario(resTUs.data);\r\n            setTiposDocumento(resTDo.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const createdId = (formulario) => { //función para crear id personalizado\r\n        if(formulario.id_tipoUsua.value === 'NA' || formulario.nombres.value === '' || formulario.apellidos.value === ''){\r\n            return '';\r\n        }\r\n\r\n        const tipoUs = tiposUsuario.find(us => us.id_tipoUsua === parseInt(formulario.id_tipoUsua.value));\r\n        \r\n        const tpU = tipoUs.nombre_tipo.substring(0, 3).toUpperCase();\r\n        const nomb = formulario.nombres.value.substring(0, 2).toUpperCase();\r\n        const apell = formulario.apellidos.value.substring(0, 2).toUpperCase();\r\n        const aleatoriNumb = Math.floor(100000 + Math.random() * 900000);\r\n\r\n        return `${tpU}${nomb}${apell}${aleatoriNumb}`;\r\n    }\r\n\r\n    const handleUsuario = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user || user.id_tipoUsua === 3){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_usuario.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const usuarioEnc = usuarios.find(usua => usua.id_usuario === idSeleccionado);\r\n\r\n                if(usuarioEnc) {\r\n                    setNuevoUsuario({\r\n                        id_tipoUsua: usuarioEnc.id_tipoUsua,\r\n                        nombre_usuario: usuarioEnc.nombre_usuario,\r\n                        contrasena_usuario: usuarioEnc.contrasena_usuario,\r\n                        id_tipoDocu: usuarioEnc.id_tipoDocu,\r\n                        documento_usuario: usuarioEnc.documento_usuario,\r\n                        nombres: usuarioEnc.nombres,\r\n                        apellidos: usuarioEnc.apellidos,\r\n                        telefono_usuario: usuarioEnc.telefono_usuario,\r\n                        correo_usuario: usuarioEnc.correo_usuario\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de usuario invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoUsuario,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['user_crea'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/usuarios/update', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar                    \r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoUsuario,\r\n                    id_usuario: createdId(form),\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['id_usuario', 'user_modifica', 'modificado_el'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/usuarios/insert', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar\r\n                        setNuevoUsuario(prev => ({ ...prev, id_usuario: response.data.id}));\r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }                \r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            const datosCompletos = usuarios.filter(us => us.id_usuario !== 'NA').map(us => {\r\n                const tipoUsua = tiposUsuario.find(u => u.id_tipoUsua === us.id_tipoUsua);\r\n                const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === us.id_tipoDocu);\r\n                \r\n                return {\r\n                    ...us,\r\n                    nombre_tipo_usuario: tipoUsua.nombre_tipo,\r\n                    nombre_tipo_documento: tipoDocu.nombre_tipo\r\n                }\r\n            });\r\n\r\n            setDatosModal(datosCompletos);\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de usuario invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/usuarios/delete', {\r\n                    id_usuario: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoUsuario(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ModalOverlay>\r\n            <ModalContent>\r\n                <CloseButton onClick={onClose}>Cerrar</CloseButton>                \r\n                <h2 style={{color: 'black'}}>{title}</h2>\r\n                <Table>                    \r\n                    <thead>\r\n                        <tr>\r\n                            {columnas.map(({label}) => (\r\n                                <th key={label}>{label}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {datos.map((item, index) => (\r\n                            <tr key={index}>\r\n                                {columnas.map(({field}) => (\r\n                                    <td key={field}>{item[field]}</td>\r\n                                ))}                                \r\n                            </tr>\r\n                        ))}                        \r\n                    </tbody>\r\n                </Table>\r\n            </ModalContent>\r\n        </ModalOverlay>\r\n    );\r\n};\r\n\r\nexport default ViewServicios;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,QAAQ,eAAe;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,YAAY;AAalB,MAAMG,YAAY,GAAGR,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,YAAY;AASlB,MAAME,WAAW,GAAGV,MAAM,CAACW,MAAM;AACjC;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,WAAW;AAKjB,MAAMG,KAAK,GAAGb,MAAM,CAACc,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,KAAK;AAeX,SAASG,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrBC,QAAQ,CAACC,KAAK,GAAG,2BAA2B;EAC5C,MAAM;IAAEC;EAAK,CAAC,GAAG1B,OAAO,CAAC,CAAC;EAC1B,MAAM2B,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAE9B,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAACsC,gBAAgB,CAAC;EAClE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACZ0C,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAM,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChDzC,KAAK,CAAC0C,GAAG,CAAC,gCAAgC,CAAC,EAC3C1C,KAAK,CAAC0C,GAAG,CAAC,qCAAqC,CAAC,EAChD1C,KAAK,CAAC0C,GAAG,CAAC,uCAAuC,CAAC,CACrD,CAAC;MACFlB,WAAW,CAACa,OAAO,CAACM,IAAI,CAAC;MACzBjB,eAAe,CAACY,MAAM,CAACK,IAAI,CAAC;MAC5Bf,iBAAiB,CAACW,MAAM,CAACI,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAME,SAAS,GAAIC,UAAU,IAAK;IAAE;IAChC,IAAGA,UAAU,CAACC,WAAW,CAACC,KAAK,KAAK,IAAI,IAAIF,UAAU,CAACG,OAAO,CAACD,KAAK,KAAK,EAAE,IAAIF,UAAU,CAACI,SAAS,CAACF,KAAK,KAAK,EAAE,EAAC;MAC7G,OAAO,EAAE;IACb;IAEA,MAAMG,MAAM,GAAG3B,YAAY,CAAC4B,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACN,WAAW,KAAKO,QAAQ,CAACR,UAAU,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC;IAEjG,MAAMO,GAAG,GAAGJ,MAAM,CAACK,WAAW,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC5D,MAAMC,IAAI,GAAGb,UAAU,CAACG,OAAO,CAACD,KAAK,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnE,MAAME,KAAK,GAAGd,UAAU,CAACI,SAAS,CAACF,KAAK,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACtE,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,MAAM,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;IAEhE,OAAO,GAAGT,GAAG,GAAGI,IAAI,GAAGC,KAAK,GAAGC,YAAY,EAAE;EACjD,CAAC;EAED,MAAMI,aAAa,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,UAAU,CAAC,EAAE,CAAC;IACdC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAG,CAACjD,IAAI,IAAIA,IAAI,CAAC2B,WAAW,KAAK,CAAC,EAAC;MAC/B1B,QAAQ,CAAC,GAAG,CAAC;IACjB;IAEA,MAAMiD,UAAU,GAAGJ,CAAC,CAACK,WAAW,CAACC,SAAS,CAACC,IAAI;IAC/C,MAAMC,IAAI,GAAGR,CAAC,CAACS,MAAM;IACrB,MAAMC,cAAc,GAAGF,IAAI,CAACG,UAAU,CAAC7B,KAAK;IAE5C,IAAGsB,UAAU,KAAK,QAAQ,EAAE;MACxB,IAAGM,cAAc,KAAK,IAAI,EAAC;QACvB,MAAME,UAAU,GAAGxD,QAAQ,CAAC8B,IAAI,CAAC2B,IAAI,IAAIA,IAAI,CAACF,UAAU,KAAKD,cAAc,CAAC;QAE5E,IAAGE,UAAU,EAAE;UACXjD,eAAe,CAAC;YACZkB,WAAW,EAAE+B,UAAU,CAAC/B,WAAW;YACnCiC,cAAc,EAAEF,UAAU,CAACE,cAAc;YACzCC,kBAAkB,EAAEH,UAAU,CAACG,kBAAkB;YACjDC,WAAW,EAAEJ,UAAU,CAACI,WAAW;YACnCC,iBAAiB,EAAEL,UAAU,CAACK,iBAAiB;YAC/ClC,OAAO,EAAE6B,UAAU,CAAC7B,OAAO;YAC3BC,SAAS,EAAE4B,UAAU,CAAC5B,SAAS;YAC/BkC,gBAAgB,EAAEN,UAAU,CAACM,gBAAgB;YAC7CC,cAAc,EAAEP,UAAU,CAACO;UAC/B,CAAC,CAAC;QACN;QAAC;MACL,CAAC,MAAM;QACHjB,UAAU,CAAC,wCAAwC,CAAC;MACxD;IACJ,CAAC,MAAM,IAAIE,UAAU,KAAK,iBAAiB,EAAE;MACzC,IAAGM,cAAc,KAAK,IAAI,EAAC;QACvB;QACA,MAAMU,QAAQ,GAAG1F,kBAAkB,CAAC,CAAC;QACrC,MAAM2F,iBAAiB,GAAG;UACtB,GAAG3D,YAAY;UACf4D,aAAa,EAAEpE,IAAI,CAAC4D,cAAc;UAClCS,aAAa,EAAEH;QACnB,CAAC;;QAED;QACA,MAAMI,eAAe,GAAG,CAAC,WAAW,CAAC;QACrC,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACN,iBAAiB,CAAC,CAACO,MAAM,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,KAAK,CAACN,eAAe,CAACO,QAAQ,CAACF,KAAK,CAAC,KAAKC,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI,CAAC,CAAC;QAEvJpD,OAAO,CAACsD,GAAG,CAACP,YAAY,CAACQ,GAAG,CAAC,CAAC,CAACJ,KAAK,CAAC,KAAKA,KAAK,CAAC,CAAC;QACjD,IAAGJ,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;UACxB/B,QAAQ,CAAC,6CAA6C,CAAC;QAC3D,CAAC,MAAM;UACH,MAAMgC,QAAQ,GAAG,MAAMtG,KAAK,CAACuG,IAAI,CAAC,uCAAuC,EAAEf,iBAAiB,CAAC;UAC7F,IAAIc,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,EAAE;YACvBnC,UAAU,CAACiC,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,CAAC;YACjCpE,WAAW,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,MAAM,IAAIkE,QAAQ,CAAC3D,IAAI,CAACC,KAAK,EAAE;YAC5B0B,QAAQ,CAACgC,QAAQ,CAAC3D,IAAI,CAACC,KAAK,CAAC;UACjC;QACJ;MACJ,CAAC,MAAM;QACH;QACA,MAAM4C,iBAAiB,GAAG;UACtB,GAAG3D,YAAY;UACfiD,UAAU,EAAEhC,SAAS,CAAC6B,IAAI,CAAC;UAC3B8B,SAAS,EAAEpF,IAAI,CAAC4D;QACpB,CAAC;;QAED;QACA,MAAMU,eAAe,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,CAAC;QACxE,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACN,iBAAiB,CAAC,CAACO,MAAM,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,KAAK,CAACN,eAAe,CAACO,QAAQ,CAACF,KAAK,CAAC,KAAKC,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI,CAAC,CAAC;QAEvJpD,OAAO,CAACsD,GAAG,CAACP,YAAY,CAACQ,GAAG,CAAC,CAAC,CAACJ,KAAK,CAAC,KAAKA,KAAK,CAAC,CAAC;QACjD,IAAGJ,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;UACxB/B,QAAQ,CAAC,6CAA6C,CAAC;QAC3D,CAAC,MAAM;UACH,MAAMgC,QAAQ,GAAG,MAAMtG,KAAK,CAACuG,IAAI,CAAC,uCAAuC,EAAEf,iBAAiB,CAAC;UAC7F,IAAIc,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,EAAE;YACvBnC,UAAU,CAACiC,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,CAAC;YACjCpE,WAAW,CAAC,CAAC,CAAC,CAAC;YACfN,eAAe,CAAC4E,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE5B,UAAU,EAAEwB,QAAQ,CAAC3D,IAAI,CAACgE;YAAE,CAAC,CAAC,CAAC;UACvE,CAAC,MAAM,IAAIL,QAAQ,CAAC3D,IAAI,CAACC,KAAK,EAAE;YAC5B0B,QAAQ,CAACgC,QAAQ,CAAC3D,IAAI,CAACC,KAAK,CAAC;UACjC;QACJ;MACJ;IACJ,CAAC,MAAM,IAAI2B,UAAU,KAAK,SAAS,EAAE;MACjC,MAAMqC,cAAc,GAAGrF,QAAQ,CAACwE,MAAM,CAACzC,EAAE,IAAIA,EAAE,CAACwB,UAAU,KAAK,IAAI,CAAC,CAACsB,GAAG,CAAC9C,EAAE,IAAI;QAC3E,MAAMuD,QAAQ,GAAGpF,YAAY,CAAC4B,IAAI,CAACyD,CAAC,IAAIA,CAAC,CAAC9D,WAAW,KAAKM,EAAE,CAACN,WAAW,CAAC;QACzE,MAAM+D,QAAQ,GAAGpF,cAAc,CAAC0B,IAAI,CAACyD,CAAC,IAAIA,CAAC,CAAC3B,WAAW,KAAK7B,EAAE,CAAC6B,WAAW,CAAC;QAE3E,OAAO;UACH,GAAG7B,EAAE;UACL0D,mBAAmB,EAAEH,QAAQ,CAACpD,WAAW;UACzCwD,qBAAqB,EAAEF,QAAQ,CAACtD;QACpC,CAAC;MACL,CAAC,CAAC;MAEFtB,aAAa,CAACyE,cAAc,CAAC;MAC7B3E,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM,IAAIsC,UAAU,KAAK,UAAU,EAAE;MAClC,IAAGM,cAAc,KAAK,IAAI,EAAE;QACxBR,UAAU,CAAC,0CAA0C,CAAC;MAC1D,CAAC,MAAM;QACH,MAAMiC,QAAQ,GAAG,MAAMtG,KAAK,CAACuG,IAAI,CAAC,uCAAuC,EAAE;UACvEzB,UAAU,EAAED;QAChB,CAAC,CAAC;QACF,IAAGyB,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,EAAE;UACtBnC,UAAU,CAACiC,QAAQ,CAAC3D,IAAI,CAAC6D,OAAO,CAAC;UACjCpE,WAAW,CAAC,CAAC,CAAC,CAAC;UACfN,eAAe,CAACC,gBAAgB,CAAC,CAAC,CAAC;QACvC,CAAC,MAAM,IAAIuE,QAAQ,CAAC3D,IAAI,CAACC,KAAK,EAAE;UAC5B0B,QAAQ,CAACgC,QAAQ,CAAC3D,IAAI,CAACC,KAAK,CAAC;QACjC;MACJ;IACJ;EACJ,CAAC;EAED,oBACIvC,OAAA,CAACC,YAAY;IAAA4G,QAAA,eACT7G,OAAA,CAACI,YAAY;MAAAyG,QAAA,gBACT7G,OAAA,CAACM,WAAW;QAACwG,OAAO,EAAEC,OAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACnDnH,OAAA;QAAIoH,KAAK,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAAR,QAAA,EAAE9F;MAAK;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCnH,OAAA,CAACS,KAAK;QAAAoG,QAAA,gBACF7G,OAAA;UAAA6G,QAAA,eACI7G,OAAA;YAAA6G,QAAA,EACKS,QAAQ,CAACvB,GAAG,CAAC,CAAC;cAACwB;YAAK,CAAC,kBAClBvH,OAAA;cAAA6G,QAAA,EAAiBU;YAAK,GAAbA,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAC9B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRnH,OAAA;UAAA6G,QAAA,EACKW,KAAK,CAACzB,GAAG,CAAC,CAAC0B,IAAI,EAAEC,KAAK,kBACnB1H,OAAA;YAAA6G,QAAA,EACKS,QAAQ,CAACvB,GAAG,CAAC,CAAC;cAAC4B;YAAK,CAAC,kBAClB3H,OAAA;cAAA6G,QAAA,EAAiBY,IAAI,CAACE,KAAK;YAAC,GAAnBA,KAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmB,CACpC;UAAC,GAHGO,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEvB;AAACtG,EAAA,CA9LQD,aAAa;EAAA,QAEDtB,OAAO,EACPC,WAAW;AAAA;AAAAqI,GAAA,GAHvBhH,aAAa;AA8LrB;AAED,eAAeA,aAAa;AAAC,IAAAT,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAiH,GAAA;AAAAC,YAAA,CAAA1H,EAAA;AAAA0H,YAAA,CAAAxH,GAAA;AAAAwH,YAAA,CAAArH,GAAA;AAAAqH,YAAA,CAAAlH,GAAA;AAAAkH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}