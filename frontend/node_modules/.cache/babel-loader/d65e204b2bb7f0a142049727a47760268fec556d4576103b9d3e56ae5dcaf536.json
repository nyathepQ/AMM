{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nyath\\\\Documents\\\\Git proyects\\\\CARLOS_QUEVEDO_AA4_EV03\\\\amm\\\\src\\\\pages\\\\Empleados.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useUser } from \"../components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFechaHoraActual } from '../utils/time';\nimport ButtonActions from '../components/ButtonActions';\nimport Header from '../components/Header';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport ModalTable from '../components/ModalTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mensaje = styled.p`\n    color: ${props => props.tipo === 'error' ? 'violet' : 'black'};\n    text-align: center;\n    border: 2px solid ${props => props.tipo === 'error' ? 'white' : 'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props => props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)'};\n`;\n_c = Mensaje;\nconst PagesDiv = styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;\n_c2 = PagesDiv;\nconst DivIdentificacion = styled.div`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: 25% 75%;\n`;\n_c3 = DivIdentificacion;\nfunction Empleados() {\n  _s();\n  document.title = \"Empleados | AMM\";\n  const {\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const inicialStateForm = {\n    id_empleado: 'NA',\n    id_tipoDocu: 'NA',\n    documento_empleado: '',\n    nombre_empleado: '',\n    apellido_empleado: '',\n    telefono_empleado: '',\n    correo_empleado: '',\n    user_crea: '',\n    user_modifica: '',\n    modificado_el: ''\n  };\n  const [empleados, setEmpleados] = useState([]);\n  const [tiposDocumento, setTiposDocumento] = useState([]);\n  const [nuevoEmpleado, setNuevoEmpleado] = useState(inicialStateForm);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [datosModal, setDatosModal] = useState([]);\n\n  //cargar datos\n  useEffect(() => {\n    cargarDatos();\n  }, []);\n  const cargarDatos = async () => {\n    try {\n      const [resEmp, resTDo] = await Promise.all([axios.get('http://localhost:3001/empleados'), axios.get('http://localhost:3001/tipos/documento')]);\n      setEmpleados(resEmp.data);\n      setTiposDocumento(resTDo.data);\n    } catch (error) {\n      console.error('Error en la carga de datos ', error);\n    }\n  };\n  const createdId = formulario => {\n    //función para crear id personalizado\n    if (formulario.nombre_empleado.value === '' || formulario.apellido_empleado.value === '') {\n      return '';\n    }\n    const nomb = formulario.nombres.value.substring(0, 3).toUpperCase();\n    const apell = formulario.apellidos.value.substring(0, 3).toUpperCase();\n    const aleatoriNumb = Math.floor(10000 + Math.random() * 90000);\n    return `EMP-${nomb}${apell}${aleatoriNumb}`;\n  };\n  const handleUsuario = async e => {\n    e.preventDefault();\n    setMensaje('');\n    setError('');\n    if (!user) {\n      navigate('/');\n    }\n    const botonPress = e.nativeEvent.submitter.name;\n    const form = e.target;\n    const idSeleccionado = form.id_empleado.value;\n    if (botonPress === 'buscar') {\n      if (idSeleccionado !== \"NA\") {\n        const usuarioEnc = empleados.find(emp => emp.id_empleado === idSeleccionado);\n        if (usuarioEnc) {\n          setNuevoEmpleado({\n            id_tipoDocu: usuarioEnc.id_tipoDocu,\n            documento_empleado: usuarioEnc.documento_empleado,\n            nombre_empleado: usuarioEnc.nombre_empleado,\n            apellido_empleado: usuarioEnc.apellido_empleado,\n            telefono_empleado: usuarioEnc.telefono_empleado,\n            correo_empleado: usuarioEnc.correo_empleado\n          });\n        }\n        ;\n      } else {\n        setMensaje('Código de empleado invalido para buscar');\n      }\n    } else if (botonPress === 'crear/modificar') {\n      if (idSeleccionado !== \"NA\") {\n        //modificar\n        const modFecha = getFechaHoraActual();\n        const datosActualizados = {\n          ...nuevoEmpleado,\n          user_modifica: user.nombre_usuario,\n          modificado_el: modFecha\n        };\n\n        // -- Varificar que ningun campo necesario este vacio --\n        const camposExcluidos = ['user_crea'];\n        const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\n        if (camposVacios.length > 0) {\n          setError(`Faltan datos válidos en uno o varios campos`);\n        } else {\n          const response = await axios.post('http://localhost:3001/empleados/update', datosActualizados);\n          if (response.data.mensaje) {\n            setMensaje(response.data.mensaje);\n            cargarDatos(); //volver a cargar datos para actualizar                    \n          } else if (response.data.error) {\n            setError(response.data.error);\n          }\n        }\n      } else {\n        //crear\n        const datosActualizados = {\n          ...nuevoEmpleado,\n          id_empleado: createdId(form),\n          user_crea: user.nombre_usuario\n        };\n\n        // -- Varificar que ningun campo necesario este vacio --\n        const camposExcluidos = ['id_usuario', 'user_modifica', 'modificado_el'];\n        const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\n        if (camposVacios.length > 0) {\n          setError(`Faltan datos válidos en uno o varios campos`);\n        } else {\n          const response = await axios.post('http://localhost:3001/empleados/insert', datosActualizados);\n          if (response.data.mensaje) {\n            setMensaje(response.data.mensaje);\n            cargarDatos(); //volver a cargar datos para actualizar\n            setNuevoEmpleado(prev => ({\n              ...prev,\n              id_empleado: response.data.id\n            }));\n          } else if (response.data.error) {\n            setError(response.data.error);\n          }\n        }\n      }\n    } else if (botonPress === 'mostrar') {\n      const datosCompletos = empleados.filter(emp => emp.id_empleado !== 'NA').map(emp => {\n        const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === emp.id_tipoDocu);\n        return {\n          ...emp,\n          nombre_tipo_documento: tipoDocu.nombre_tipo\n        };\n      });\n      setDatosModal(datosCompletos);\n      setMostrarModal(true);\n    } else if (botonPress === 'eliminar') {\n      if (idSeleccionado === 'NA') {\n        setMensaje('Código de empleado invalido para eliminar');\n      } else {\n        const response = await axios.post('http://localhost:3001/empleados/delete', {\n          id_empleado: idSeleccionado\n        });\n        if (response.data.mensaje) {\n          setMensaje(response.data.mensaje);\n          cargarDatos(); //volver a cargar datos para actualizar\n          setNuevoEmpleado(inicialStateForm); //reinicia formulario \n        } else if (response.data.error) {\n          setError(response.data.error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PagesDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }, this), mensaje && /*#__PURE__*/_jsxDEV(Mensaje, {\n          tipo: \"mensaje\",\n          children: mensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form_pages\",\n          onSubmit: handleUsuario,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_display\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_empleado\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"id_empleado\",\n              id: \"id_empleado\",\n              value: nuevoEmpleado.id_empleado,\n              onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                ...nuevoEmpleado,\n                id_empleado: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NA\",\n                children: \"Nuevo registro\"\n              }, \"NA\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this), empleados.map(emp => emp.id_empleado !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: emp.id_empleado,\n                children: emp.id_empleado\n              }, emp.id_empleado, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 61\n              }, this) : '')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"id_tipoDocu\",\n              children: \"Documento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DivIdentificacion, {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"id_tipoDocu\",\n                id: \"id_tipoDocu\",\n                value: nuevoEmpleado.id_tipoDocu,\n                onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                  ...nuevoEmpleado,\n                  id_tipoDocu: e.target.value\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"NA\",\n                  children: \"Seleccionar registro\"\n                }, \"NA\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 33\n                }, this), tiposDocumento.map(tDoc => tDoc.id_tipoDocu !== 'NA' ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tDoc.id_tipoDocu,\n                  children: tDoc.nombre_tipo\n                }, tDoc.id_tipoDocu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 66\n                }, this) : '')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"documento_empleado\",\n                id: \"documento_empleado\",\n                value: nuevoEmpleado.documento_empleado,\n                onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                  ...nuevoEmpleado,\n                  documento_empleado: e.target.value.trimStart()\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombre_empleado\",\n              children: \"Nombres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre_empleado\",\n              id: \"nombre_empleado\",\n              value: nuevoEmpleado.nombre_empleado,\n              onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                ...nuevoEmpleado,\n                nombre_empleado: e.target.value.trimStart()\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apellido_empleado\",\n              children: \"Apellidos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"apellido_empleado\",\n              id: \"apellido_empleado\",\n              value: nuevoEmpleado.apellido_empleado,\n              onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                ...nuevoEmpleado,\n                apellido_empleado: e.target.value.trimStart()\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"telefono_empleado\",\n              children: \"Telefono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"telefono_empleado\",\n              id: \"telefono_empleado\",\n              value: nuevoEmpleado.telefono_empleado,\n              onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                ...nuevoEmpleado,\n                telefono_empleado: e.target.value.trimStart()\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"correo_empleado\",\n              children: \"Correo electronico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"correo_empleado\",\n              id: \"correo_empleado\",\n              value: nuevoEmpleado.correo_empleado,\n              onChange: e => setNuevoEmpleado(nuevoEmpleado => ({\n                ...nuevoEmpleado,\n                correo_empleado: e.target.value.trimStart()\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ButtonActions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), mostrarModal && /*#__PURE__*/_jsxDEV(ModalTable, {\n        onClose: () => setMostrarModal(false),\n        datos: datosModal,\n        columnas: [{\n          label: 'Código',\n          field: 'id_empleado'\n        }, {\n          label: 'Tipo de documento',\n          field: 'nombre_tipo_documento'\n        }, {\n          label: 'Documento',\n          field: 'documento_empleado'\n        }, {\n          label: 'Nombres',\n          field: 'nombre_empleado'\n        }, {\n          label: 'Apellidos',\n          field: 'apellido_empleado'\n        }, {\n          label: 'Telefono',\n          field: 'telefono_empleado'\n        }, {\n          label: 'Correo',\n          field: 'correo_empleado'\n        }, {\n          label: 'Creador',\n          field: 'user_crea'\n        }, {\n          label: 'Fecha creación',\n          field: 'creado_el'\n        }, {\n          label: 'Modificador',\n          field: 'user_modifica'\n        }, {\n          label: 'Fecha modificación',\n          field: 'modificado_el'\n        }],\n        title: \"Empleados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Empleados, \"mouRGAL05XQffO4bdAe+PljnhNQ=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c4 = Empleados;\n;\nexport default Empleados;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Mensaje\");\n$RefreshReg$(_c2, \"PagesDiv\");\n$RefreshReg$(_c3, \"DivIdentificacion\");\n$RefreshReg$(_c4, \"Empleados\");","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Mensaje","p","props","tipo","_c","PagesDiv","div","_c2","DivIdentificacion","_c3","Empleados","_s","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_empleado","id_tipoDocu","documento_empleado","nombre_empleado","apellido_empleado","telefono_empleado","correo_empleado","user_crea","user_modifica","modificado_el","empleados","setEmpleados","tiposDocumento","setTiposDocumento","nuevoEmpleado","setNuevoEmpleado","mostrarModal","setMostrarModal","datosModal","setDatosModal","cargarDatos","resEmp","resTDo","Promise","all","get","data","console","createdId","formulario","value","nomb","nombres","substring","toUpperCase","apell","apellidos","aleatoriNumb","Math","floor","random","handleUsuario","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","usuarioEnc","find","emp","modFecha","datosActualizados","nombre_usuario","camposExcluidos","camposVacios","Object","entries","filter","clave","valor","includes","length","response","post","prev","id","datosCompletos","map","tipoDocu","u","nombre_tipo_documento","nombre_tipo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","onChange","tDoc","type","trimStart","onClose","datos","columnas","label","field","_c4","$RefreshReg$"],"sources":["C:/Users/nyath/Documents/Git proyects/CARLOS_QUEVEDO_AA4_EV03/amm/src/pages/Empleados.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'violet' : 'black')};\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst DivIdentificacion = styled.div`\r\n    display: grid;\r\n    gap: 5px;\r\n    grid-template-columns: 25% 75%;\r\n`;\r\n\r\nfunction Empleados() {\r\n    document.title = \"Empleados | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_empleado: 'NA', id_tipoDocu: 'NA', documento_empleado: '', nombre_empleado: '', apellido_empleado: '', telefono_empleado: '', correo_empleado: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [empleados, setEmpleados] = useState([]);\r\n    const [tiposDocumento, setTiposDocumento] = useState([]);\r\n    const [nuevoEmpleado, setNuevoEmpleado] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n    const [datosModal, setDatosModal] = useState([]);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const [resEmp, resTDo] = await Promise.all([\r\n                axios.get('http://localhost:3001/empleados'),\r\n                axios.get('http://localhost:3001/tipos/documento')\r\n            ]);\r\n            setEmpleados(resEmp.data);\r\n            setTiposDocumento(resTDo.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const createdId = (formulario) => { //función para crear id personalizado\r\n        if(formulario.nombre_empleado.value === '' || formulario.apellido_empleado.value === ''){\r\n            return '';\r\n        }\r\n\r\n        const nomb = formulario.nombres.value.substring(0, 3).toUpperCase();\r\n        const apell = formulario.apellidos.value.substring(0, 3).toUpperCase();\r\n        const aleatoriNumb = Math.floor(10000 + Math.random() * 90000);\r\n\r\n        return `EMP-${nomb}${apell}${aleatoriNumb}`;\r\n    }\r\n\r\n    const handleUsuario = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_empleado.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const usuarioEnc = empleados.find(emp => emp.id_empleado === idSeleccionado);\r\n\r\n                if(usuarioEnc) {\r\n                    setNuevoEmpleado({\r\n                        id_tipoDocu: usuarioEnc.id_tipoDocu,\r\n                        documento_empleado: usuarioEnc.documento_empleado,\r\n                        nombre_empleado: usuarioEnc.nombre_empleado,\r\n                        apellido_empleado: usuarioEnc.apellido_empleado,\r\n                        telefono_empleado: usuarioEnc.telefono_empleado,\r\n                        correo_empleado: usuarioEnc.correo_empleado\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de empleado invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoEmpleado,\r\n                    user_modifica: user.nombre_usuario,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['user_crea'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/empleados/update', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar                    \r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoEmpleado,\r\n                    id_empleado: createdId(form),\r\n                    user_crea: user.nombre_usuario\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['id_usuario', 'user_modifica', 'modificado_el'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/empleados/insert', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar\r\n                        setNuevoEmpleado(prev => ({ ...prev, id_empleado: response.data.id}));\r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }                \r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            const datosCompletos = empleados.filter(emp => emp.id_empleado !== 'NA').map(emp => {\r\n                const tipoDocu = tiposDocumento.find(u => u.id_tipoDocu === emp.id_tipoDocu);\r\n                \r\n                return {\r\n                    ...emp,\r\n                    nombre_tipo_documento: tipoDocu.nombre_tipo\r\n                }\r\n            });\r\n\r\n            setDatosModal(datosCompletos);\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de empleado invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/empleados/delete', {\r\n                    id_empleado: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoEmpleado(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleUsuario}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_empleado\">Código</label>\r\n                        <select \r\n                            name=\"id_empleado\"\r\n                            id=\"id_empleado\"\r\n                            value={nuevoEmpleado.id_empleado}\r\n                            onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, id_empleado: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {empleados.map(emp => (\r\n                                emp.id_empleado !== 'NA' ? (<option key={emp.id_empleado} value={emp.id_empleado}>{emp.id_empleado}</option>) : ''\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"id_tipoDocu\">Documento</label>\r\n                        <DivIdentificacion>\r\n                            <select \r\n                                name=\"id_tipoDocu\"\r\n                                id=\"id_tipoDocu\"\r\n                                value={nuevoEmpleado.id_tipoDocu}\r\n                                onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, id_tipoDocu: e.target.value}))}\r\n                            >\r\n                                <option key=\"NA\" value=\"NA\">Seleccionar registro</option>\r\n                                {tiposDocumento.map(tDoc => (\r\n                                    tDoc.id_tipoDocu !== 'NA' ? (<option key={tDoc.id_tipoDocu} value={tDoc.id_tipoDocu}>{tDoc.nombre_tipo}</option>) : ''\r\n                                ))}\r\n                            </select>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"documento_empleado\"\r\n                                id=\"documento_empleado\"\r\n                                value={nuevoEmpleado.documento_empleado}\r\n                                onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, documento_empleado: e.target.value.trimStart()}))}\r\n                            />\r\n                        </DivIdentificacion>\r\n                        <label htmlFor=\"nombre_empleado\">Nombres</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_empleado\"\r\n                            id=\"nombre_empleado\"\r\n                            value={nuevoEmpleado.nombre_empleado}\r\n                            onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, nombre_empleado: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"apellido_empleado\">Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"apellido_empleado\"\r\n                            id=\"apellido_empleado\"\r\n                            value={nuevoEmpleado.apellido_empleado}\r\n                            onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, apellido_empleado: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"telefono_empleado\">Telefono</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"telefono_empleado\"\r\n                            id=\"telefono_empleado\"\r\n                            value={nuevoEmpleado.telefono_empleado}\r\n                            onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, telefono_empleado: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"correo_empleado\">Correo electronico</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"correo_empleado\"\r\n                            id=\"correo_empleado\"\r\n                            value={nuevoEmpleado.correo_empleado}\r\n                            onChange={(e) => setNuevoEmpleado(nuevoEmpleado => ({ ...nuevoEmpleado, correo_empleado: e.target.value.trimStart()}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={datosModal}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_empleado'}, \r\n                        {label: 'Tipo de documento', field: 'nombre_tipo_documento'},\r\n                        {label: 'Documento', field: 'documento_empleado'},\r\n                        {label: 'Nombres', field: 'nombre_empleado'},\r\n                        {label: 'Apellidos', field: 'apellido_empleado'},\r\n                        {label: 'Telefono', field: 'telefono_empleado'},\r\n                        {label: 'Correo', field: 'correo_empleado'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Empleados\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Empleados;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}