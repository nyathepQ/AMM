{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useUser}from\"../components/UserContext\";import{useNavigate}from\"react-router-dom\";import{getFechaHoraActual}from'../utils/time';import ButtonActions from'../components/ButtonActions';import Header from'../components/Header';import axios from'axios';import styled from'styled-components';import GlobalStyles from'../styles/GlobalStyles';import ModalTable from'../components/ModalTable';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Mensaje=styled.p`\n    color: ${props=>props.tipo==='error'?'violet':'black'};\n    text-align: center;\n    border: 2px solid ${props=>props.tipo==='error'?'white':'black'};\n    padding: 10px;\n    border-radius: 5px;\n    background-color: ${props=>props.tipo==='mensaje'?'rgba(255, 255, 255, 0.4)':'rgba(0, 0, 0, 0.4)'};\n`;const PagesDiv=styled.div`\n    min-height: 80vh;\n    margin-top: 5px;\n    height: auto;\n    width: auto;\n    align-self: center;\n    align-items: center;\n`;function Clientes(){document.title=\"Clientes | AMM\";const{user}=useUser();const navigate=useNavigate();const[error,setError]=useState('');const[mensaje,setMensaje]=useState('');const inicialStateForm={id_cliente:'NA',nombre_cliente:'',apellido_cliente:'',direccion_cliente:'',telefono_cliente:'',correo_cliente:'',observacion_cliente:'',user_crea:'',user_modifica:'',modificado_el:''};const[clientes,setClientes]=useState([]);const[nuevoClient,setNuevoClient]=useState(inicialStateForm);const[mostrarModal,setMostrarModal]=useState(false);//cargar datos\nuseEffect(()=>{cargarDatos();},[]);const cargarDatos=async()=>{try{const resClient=await axios.get('http://localhost:3001/clientes');setClientes(resClient.data);}catch(error){console.error('Error en la carga de datos ',error);}};const handleCliente=async e=>{e.preventDefault();setMensaje('');setError('');if(!user){navigate('/');}const botonPress=e.nativeEvent.submitter.name;const form=e.target;const idSeleccionado=form.id_cliente.value;if(botonPress==='buscar'){if(idSeleccionado!==\"NA\"){const clienteEnc=clientes.find(client=>client.id_cliente===parseInt(idSeleccionado));if(clienteEnc){setNuevoClient({id_cliente:clienteEnc.id_tipoLimp,nombre_cliente:clienteEnc.nombre_cliente,apellido_cliente:clienteEnc.apellido_cliente,direccion_cliente:clienteEnc.direccion_cliente,telefono_cliente:clienteEnc.telefono_cliente,correo_cliente:clienteEnc.correo_cliente,observacion_cliente:clienteEnc.observacion_cliente});};}else{setMensaje('Código de cliente invalido para buscar');}}else if(botonPress==='crear/modificar'){if(idSeleccionado!==\"NA\"){//modificar\nconst modFecha=getFechaHoraActual();const datosActualizados={...nuevoClient,user_modifica:user,modificado_el:modFecha};// -- Varificar que ningun campo necesario este vacio --\nconst camposExcluidos=['observacion_cliente','user_crea'];const camposVacios=Object.entries(datosActualizados).filter(_ref=>{let[clave,valor]=_ref;return!camposExcluidos.includes(clave)&&(valor===''||valor==='NA');});console.log(camposVacios.map(_ref2=>{let[clave]=_ref2;return clave;}));if(camposVacios.length>0){setError(`Faltan datos válidos en uno o varios campos`);}else{const response=await axios.post('http://localhost:3001/clientes/update',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar                    \n}else if(response.data.error){setError(response.data.error);}}}else{//crear\nconst datosActualizados={...nuevoClient,user_crea:user};// -- Varificar que ningun campo necesario este vacio --\nconst camposExcluidos=['id_cliente','observacion_cliente','user_modifica','modificado_el'];const camposVacios=Object.entries(datosActualizados).filter(_ref3=>{let[clave,valor]=_ref3;return!camposExcluidos.includes(clave)&&(valor===''||valor==='NA');});console.log(camposVacios.map(_ref4=>{let[clave]=_ref4;return clave;}));if(camposVacios.length>0){setError(`Faltan datos válidos en uno o varios campos`);}else{const response=await axios.post('http://localhost:3001/clientes/insert',datosActualizados);if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoClient(prev=>({...prev,id_cliente:response.data.id}));}else if(response.data.error){setError(response.data.error);}}}}else if(botonPress==='mostrar'){setMostrarModal(true);}else if(botonPress==='eliminar'){if(idSeleccionado==='NA'){setMensaje('Código de cliente invalido para eliminar');}else{const response=await axios.post('http://localhost:3001/clientes/delete',{id_cliente:idSeleccionado});if(response.data.mensaje){setMensaje(response.data.mensaje);cargarDatos();//volver a cargar datos para actualizar\nsetNuevoClient(inicialStateForm);//reinicia formulario \n}else if(response.data.error){setError(response.data.error);}}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(PagesDiv,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"error\",children:error}),mensaje&&/*#__PURE__*/_jsx(Mensaje,{tipo:\"mensaje\",children:mensaje}),/*#__PURE__*/_jsxs(\"form\",{className:\"form_pages\",onSubmit:handleCliente,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form_display\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id_cliente\",children:\"C\\xF3digo\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"id_cliente\",id:\"id_cliente\",value:nuevoClient.id_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,id_cliente:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"NA\",children:\"Nuevo registro\"},\"NA\"),clientes.map(client=>/*#__PURE__*/_jsx(\"option\",{value:client.id_cliente,children:client.id_cliente},client.id_cliente))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nombre_cliente\",children:\"Nombres\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nombre_cliente\",id:\"nombre_cliente\",value:nuevoClient.nombre_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,nombre_cliente:e.target.value.trimStart()}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"apellido_cliente\",children:\"Apellidos\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"apellido_cliente\",id:\"apellido_cliente\",value:nuevoClient.apellido_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,apellido_cliente:e.target.value.trimStart()}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"direccion_cliente\",children:\"Direcci\\xF3n\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"direccion_cliente\",id:\"direccion_cliente\",value:nuevoClient.direccion_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,direccion_cliente:e.target.value.trimStart()}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"telefono_cliente\",children:\"Telefono\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"telefono_cliente\",id:\"telefono_cliente\",value:nuevoClient.telefono_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,telefono_cliente:e.target.value.trimStart()}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"correo_cliente\",children:\"Correo electronico\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"correo_cliente\",id:\"correo_cliente\",value:nuevoClient.correo_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,correo_cliente:e.target.value.trimStart()}))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"observacion_cliente\",children:\"Observaciones\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"observacion_cliente\",id:\"observacion_cliente\",value:nuevoClient.observacion_cliente,onChange:e=>setNuevoClient(nuevoClient=>({...nuevoClient,observacion_cliente:e.target.value.trimStart()}))})]}),/*#__PURE__*/_jsx(ButtonActions,{})]})]}),mostrarModal&&/*#__PURE__*/_jsx(ModalTable,{onClose:()=>setMostrarModal(false),datos:clientes,columnas:[{label:'Código',field:'id_cliente'},{label:'Nombres',field:'nombre_cliente'},{label:'Apellidos',field:'apellido_cliente'},{label:'Dirección',field:'direccion_cliente'},{label:'Telefono',field:'telefono_cliente'},{label:'Correo electronico',field:'correo_cliente'},{label:'Observaciones',field:'observacion_cliente'},{label:'Creador',field:'user_crea'},{label:'Fecha creación',field:'creado_el'},{label:'Modificador',field:'user_modifica'},{label:'Fecha modificación',field:'modificado_el'}],title:\"Clientes\"})]})]});};export default Clientes;","map":{"version":3,"names":["useState","useEffect","useUser","useNavigate","getFechaHoraActual","ButtonActions","Header","axios","styled","GlobalStyles","ModalTable","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Mensaje","p","props","tipo","PagesDiv","div","Clientes","document","title","user","navigate","error","setError","mensaje","setMensaje","inicialStateForm","id_cliente","nombre_cliente","apellido_cliente","direccion_cliente","telefono_cliente","correo_cliente","observacion_cliente","user_crea","user_modifica","modificado_el","clientes","setClientes","nuevoClient","setNuevoClient","mostrarModal","setMostrarModal","cargarDatos","resClient","get","data","console","handleCliente","e","preventDefault","botonPress","nativeEvent","submitter","name","form","target","idSeleccionado","value","clienteEnc","find","client","parseInt","id_tipoLimp","modFecha","datosActualizados","camposExcluidos","camposVacios","Object","entries","filter","_ref","clave","valor","includes","log","map","_ref2","length","response","post","_ref3","_ref4","prev","id","children","className","onSubmit","htmlFor","onChange","type","trimStart","onClose","datos","columnas","label","field"],"sources":["C:/Users/nyath/Documents/Git proyects/GA8-220501096-AA1-EV01/amm/frontend/src/pages/Clientes.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useUser } from \"../components/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFechaHoraActual } from '../utils/time';\r\nimport ButtonActions from '../components/ButtonActions';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from '../styles/GlobalStyles';\r\nimport ModalTable from '../components/ModalTable';\r\n\r\nconst Mensaje = styled.p`\r\n    color: ${props => (props.tipo === 'error' ? 'violet' : 'black')};\r\n    text-align: center;\r\n    border: 2px solid ${props => (props.tipo === 'error' ? 'white' : 'black')};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: ${props => (props.tipo === 'mensaje' ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 0, 0, 0.4)')};\r\n`;\r\n\r\nconst PagesDiv = styled.div`\r\n    min-height: 80vh;\r\n    margin-top: 5px;\r\n    height: auto;\r\n    width: auto;\r\n    align-self: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Clientes() {\r\n    document.title = \"Clientes | AMM\";\r\n    const { user } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [mensaje, setMensaje] = useState('');\r\n\r\n    const inicialStateForm = {id_cliente: 'NA', nombre_cliente: '', apellido_cliente: '', direccion_cliente: '', telefono_cliente: '', correo_cliente: '', observacion_cliente: '', user_crea: '', user_modifica: '', modificado_el: ''};\r\n\r\n    const [clientes, setClientes] = useState([]);\r\n    const [nuevoClient, setNuevoClient] = useState(inicialStateForm);\r\n    const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n    //cargar datos\r\n    useEffect(() => {\r\n        cargarDatos();\r\n    }, []);\r\n\r\n    const cargarDatos = async () => {\r\n        try {\r\n            const resClient = await axios.get('http://localhost:3001/clientes');\r\n            setClientes(resClient.data);\r\n        } catch (error) {\r\n            console.error('Error en la carga de datos ', error);\r\n        }\r\n    }\r\n\r\n    const handleCliente = async (e) => {\r\n        e.preventDefault();\r\n        setMensaje('');\r\n        setError('');\r\n\r\n        if(!user){\r\n            navigate('/');  \r\n        }\r\n\r\n        const botonPress = e.nativeEvent.submitter.name;\r\n        const form = e.target;\r\n        const idSeleccionado = form.id_cliente.value;\r\n\r\n        if(botonPress === 'buscar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                const clienteEnc = clientes.find(client => client.id_cliente === parseInt(idSeleccionado));\r\n\r\n                if(clienteEnc) {\r\n                    setNuevoClient({\r\n                        id_cliente: clienteEnc.id_tipoLimp,\r\n                        nombre_cliente: clienteEnc.nombre_cliente,\r\n                        apellido_cliente: clienteEnc.apellido_cliente,\r\n                        direccion_cliente: clienteEnc.direccion_cliente,\r\n                        telefono_cliente: clienteEnc.telefono_cliente,\r\n                        correo_cliente: clienteEnc.correo_cliente,\r\n                        observacion_cliente: clienteEnc.observacion_cliente\r\n                    });                    \r\n                };\r\n            } else {\r\n                setMensaje('Código de cliente invalido para buscar');\r\n            }\r\n        } else if (botonPress === 'crear/modificar') {\r\n            if(idSeleccionado !== \"NA\"){\r\n                //modificar\r\n                const modFecha = getFechaHoraActual();\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_modifica: user,\r\n                    modificado_el: modFecha\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['observacion_cliente', 'user_crea'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/clientes/update', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar                    \r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            } else {    \r\n                //crear\r\n                const datosActualizados = {\r\n                    ...nuevoClient,\r\n                    user_crea: user\r\n                };\r\n\r\n                // -- Varificar que ningun campo necesario este vacio --\r\n                const camposExcluidos = ['id_cliente', 'observacion_cliente', 'user_modifica', 'modificado_el'];\r\n                const camposVacios = Object.entries(datosActualizados).filter(([clave, valor]) => !camposExcluidos.includes(clave) && (valor === '' || valor === 'NA'));\r\n\r\n                console.log(camposVacios.map(([clave]) => clave));\r\n                if(camposVacios.length > 0) {\r\n                    setError(`Faltan datos válidos en uno o varios campos`);\r\n                } else {\r\n                    const response = await axios.post('http://localhost:3001/clientes/insert', datosActualizados);\r\n                    if (response.data.mensaje) {\r\n                        setMensaje(response.data.mensaje);\r\n                        cargarDatos(); //volver a cargar datos para actualizar\r\n                        setNuevoClient(prev => ({ ...prev, id_cliente: response.data.id}));\r\n                    } else if (response.data.error) {\r\n                        setError(response.data.error);\r\n                    }\r\n                }\r\n            }\r\n        } else if (botonPress === 'mostrar') {\r\n            setMostrarModal(true);\r\n        } else if (botonPress === 'eliminar') {\r\n            if(idSeleccionado === 'NA') {\r\n                setMensaje('Código de cliente invalido para eliminar');\r\n            } else {\r\n                const response = await axios.post('http://localhost:3001/clientes/delete', {\r\n                    id_cliente: idSeleccionado\r\n                });\r\n                if(response.data.mensaje) {\r\n                    setMensaje(response.data.mensaje);\r\n                    cargarDatos(); //volver a cargar datos para actualizar\r\n                    setNuevoClient(inicialStateForm); //reinicia formulario \r\n                } else if (response.data.error) {\r\n                    setError(response.data.error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <PagesDiv>\r\n            <div>\r\n                {/* Mensajes */}\r\n                {error && <Mensaje tipo=\"error\">{error}</Mensaje>}\r\n                {mensaje && <Mensaje tipo=\"mensaje\">{mensaje}</Mensaje>}\r\n                <form className=\"form_pages\" onSubmit={handleCliente}>\r\n                    <div className=\"form_display\">\r\n                        <label htmlFor=\"id_cliente\">Código</label>\r\n                        <select \r\n                            name=\"id_cliente\"\r\n                            id=\"id_cliente\"\r\n                            value={nuevoClient.id_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, id_cliente: e.target.value}))}\r\n                        >\r\n                            <option key=\"NA\" value=\"NA\">Nuevo registro</option>\r\n                            {clientes.map(client => (\r\n                                <option key={client.id_cliente} value={client.id_cliente}>\r\n                                    {client.id_cliente}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor=\"nombre_cliente\">Nombres</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre_cliente\"\r\n                            id=\"nombre_cliente\"\r\n                            value={nuevoClient.nombre_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, nombre_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"apellido_cliente\">Apellidos</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"apellido_cliente\"\r\n                            id=\"apellido_cliente\"\r\n                            value={nuevoClient.apellido_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, apellido_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"direccion_cliente\">Dirección</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"direccion_cliente\"\r\n                            id=\"direccion_cliente\"\r\n                            value={nuevoClient.direccion_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, direccion_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"telefono_cliente\">Telefono</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"telefono_cliente\"\r\n                            id=\"telefono_cliente\"\r\n                            value={nuevoClient.telefono_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, telefono_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"correo_cliente\">Correo electronico</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"correo_cliente\"\r\n                            id=\"correo_cliente\"\r\n                            value={nuevoClient.correo_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, correo_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                        <label htmlFor=\"observacion_cliente\">Observaciones</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"observacion_cliente\"\r\n                            id=\"observacion_cliente\"\r\n                            value={nuevoClient.observacion_cliente}\r\n                            onChange={(e) => setNuevoClient(nuevoClient => ({ ...nuevoClient, observacion_cliente: e.target.value.trimStart()}))}\r\n                        />\r\n                    </div>\r\n                    <ButtonActions/>\r\n                </form>\r\n            </div>\r\n            {mostrarModal && (\r\n                <ModalTable\r\n                    onClose={() => setMostrarModal(false)}\r\n                    datos={clientes}\r\n                    columnas={[\r\n                        {label: 'Código', field:'id_cliente'}, \r\n                        {label: 'Nombres', field: 'nombre_cliente'},\r\n                        {label: 'Apellidos', field: 'apellido_cliente'},\r\n                        {label: 'Dirección', field: 'direccion_cliente'},\r\n                        {label: 'Telefono', field: 'telefono_cliente'},\r\n                        {label: 'Correo electronico', field: 'correo_cliente'},\r\n                        {label: 'Observaciones', field: 'observacion_cliente'},\r\n                        {label: 'Creador', field: 'user_crea'},\r\n                        {label: 'Fecha creación', field: 'creado_el'},\r\n                        {label: 'Modificador', field: 'user_modifica'},\r\n                        {label: 'Fecha modificación', field: 'modificado_el'}\r\n                    ]}\r\n                    title=\"Clientes\"\r\n                />\r\n            )}\r\n        </PagesDiv>\r\n    </>)\r\n};\r\n\r\nexport default Clientes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}